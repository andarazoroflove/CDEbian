'\" t
...\" TabLstCo.sgm /main/8 1996/09/08 21:08:55 rws $
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "XmTabListCopy" "library call"
.SH "NAME"
\fBXmTabListCopy\fP \(em A convenience function that creates a new tab list from an existing list
.iX "XmTabListCopy"
.SH "SYNOPSIS"
.PP
.nf
#include <Xm/Xm\&.h>
\fBXmTabList \fBXmTabListCopy\fP\fR(
\fBXmTabList \fBtablist\fR\fR,
\fBint \fBoffset\fR\fR,
\fBCardinal \fBcount\fR\fR);
.fi
.SH "DESCRIPTION"
.PP
\fBXmTabListCopy\fP creates a new tab list consisting of a copy of
a portion of the contents of the \fItablist\fP argument\&. This
function starts copying at the specified offset value of the tab list
and copies \fIcount\fP values\&.
.IP "\fItablist\fP" 10
Specifies a tab list to be copied\&.
.IP "\fIoffset\fP" 10
Specifies where to start copying\&. A value of 0 (zero) indicates begin
at the beginning, a value of 1 indicates to skip the first tab, and so
on\&. A negative indicates to begin counting backwards from the end\&.
A value of -1 indicates to start copying from the last tab\&.
.IP "\fIcount\fP" 10
Specifies the number of tabs to copy\&. A value of 0 (zero) indicates
to copy all elements from the starting point to the end (beginning if
\fIoffset\fP is negative) of the tab list\&.
.SH "RETURN"
.PP
If \fItablist\fP is NULL, this function returns NULL\&. Otherwise,
this function returns a newly allocated \fBXmTabList\fR\&.
If the function does allocate an \fBXmTabList\fR, then the
application is responsible for managing the allocated space\&.
The application can recover the allocated space by calling \fBXmTabListFree\fP\&.
.SH "RELATED"
.PP
\fBXmTabList\fP(3) and
\fBXmTabListFree\fP(3)\&.
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:42
