'\" t
...\" StrCoC.sgm /main/9 1996/09/08 21:03:21 rws $
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "XmStringComponentType" "library call"
.SH "NAME"
\fBXmStringComponentType\fR \(em Data type for compound string components
.iX "XmStringComponentType"
.iX "data types" "XmStringComponentType"
.SH "SYNOPSIS"
.PP
.nf
#include <Xm/Xm\&.h>
.fi
.SH "DESCRIPTION"
.PP
\fBXmStringComponentType\fR is the data type specifying compound string
component types\&. A compound string component identifies some
part of a compound string, and can have a value and length\&. A compound
string component can be one of the
following types\&. These component types are grouped
according to their length and value types\&.
.PP
The following components have values of NULL and lengths of 0 (zero)\&.
.IP "\fBXmSTRING_COMPONENT_SEPARATOR\fP" 10
This component usually maps to a newline or carriage return in
displayed text\&.
.IP "\fBXmSTRING_COMPONENT_TAB\fP" 10
This component may be thought of as a text component containing only a
single tab\&.
.IP "\fBXmSTRING_COMPONENT_LAYOUT_POP\fP" 10
The layout direction is kept on a stack, with the current direction
kept on top of the stack\&. When this component is read, the most
recently read layout direction is popped off the stack and replaced by
the direction immediately before it\&.
.IP "\fBXmSTRING_COMPONENT_END\fP" 10
This component marks the end of a compound string\&. No other components
should follow\&. If an application does not place an
\fBXmSTRING_COMPONENT_END\fP component at the end of
an \fBXmString\fR, Motif automatically does it for the application\&.
.PP
The following component has a value of \fBXmDirection\fR and the
length of that direction\&.
.IP "\fBXmSTRING_COMPONENT_LAYOUT_PUSH\fP" 10
The layout direction is kept on a stack, with the current direction
kept on top of the stack\&. This component replaces the current layout
direction, and causes another to be pushed onto the top of this stack\&.
.PP
The following component has a value of \fBXmStringDirection\fR and the
length of that direction\&.
.IP "\fBXmSTRING_COMPONENT_DIRECTION\fP" 10
This component sets the string direction by overriding the previous
string direction\&.
.PP
The following components have values of type \fBchar *\fR or some
equivalent type, and the lengths of these types\&.
.IP "\fBXmSTRING_COMPONENT_LOCALE_TEXT\fP" 10
This component contains the multibyte text of a compound string\&.
.IP "\fBXmSTRING_COMPONENT_WIDECHAR_TEXT\fP" 10
This component contains the widechar text of a compound string\&.
.IP "\fBXmSTRING_COMPONENT_TEXT\fP" 10
This component contains the charset text of a compound string\&. Note
that a compound string cannot contain both charset and locale
(multibyte or widechar) text\&.
.IP "\fBXmSTRING_COMPONENT_RENDITION_BEGIN\fP" 10
This component marks the beginning of a new rendition\&. All text
following this component will be rendered using this rendition as the
primary one\&. If there is already a rendition in effect, it is kept in
memory and used to fill in any unspecified values in the primary
rendition\&. Renditions are kept until a corresponding
\fBXmSTRING_COMPONENT_RENDITION_END\fP component is encountered\&.
.IP "\fBXmSTRING_COMPONENT_RENDITION_END\fP" 10
This component signifies that the specified rendition will no longer
be used to render text, and will not be available to fill in
unspecified values of newer renditions\&.
.IP "\fBXmSTRING_COMPONENT_UNKNOWN\fP" 10
This component type signifies that the component contents belong to an
unknown component type\&.
.IP "\fBXmSTRING_COMPONENT_LOCALE\fP" 10
Use this component to specify the locale in which an internationalized
application is to execute\&.
The only valid character string for this component
is \fB_MOTIF_DEFAULT_LOCALE\fP\&.
.IP "\fBXmSTRING_COMPONENT_TAG\fP" 10
For charset text, this is the tag of the font to be used to display
the text\&. This tag is sometimes referred to as the charset tag or the
fontlist tag\&.
.IP "\fBXmSTRING_COMPONENT_CHARSET\fP" 10
This component is obsolete and remains for compatibility with previous
releases\&. It has been replaced by \fBXmSTRING_COMPONENT_TAG\fP\&.
.IP "\fBXmSTRING_COMPONENT_FONTLIST_ELEMENT_TAG\fP" 10
This component is obsolete and remains for compatibility with previous
releases\&. It has been replaced by \fBXmSTRING_COMPONENT_TAG\fP\&.
.PP
Some compound string components depend on values defined in other
components\&. The \fBXmSTRING_COMPONENT_TAB\fP component definition, for
example, depends on information in the
\fBXmSTRING_COMPONENT_RENDITION_BEGIN\fP\&. To account for these
dependencies, a typical compound string will have its member
components in the following order:
.PP
.nf
[
  [ \fBXmSTRING_COMPONENT_LAYOUT_PUSH\fP ]
  [ \fBXmSTRING_COMPONENT_RENDITION_BEGIN\fP ]*
  [ \fBXmSTRING_COMPONENT_TAG\fP | \fBXmSTRING_COMPONENT_LOCALE\fP ]
  [ \fBXmSTRING_COMPONENT_TAB\fP ]*
  [ \fBXmSTRING_COMPONENT_DIRECTION\fP ]
  [ \fBXmSTRING_COMPONENT_TEXT\fP |
    \fBXmSTRING_COMPONENT_LOCALE_TEXT\fP |
    \fBXmSTRING_COMPONENT_WIDECHAR_TEXT\fP ]
  [ \fBXmSTRING_COMPONENT_RENDITION_END\fP ]*
  [ \fBXmSTRING_COMPONENT_LAYOUT_POP\fP ]
  [ \fBXmSTRING_COMPONENT_SEPARATOR\fP ]
]*
\fBXmSTRING_COMPONENT_END\fP
.fi
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:42
