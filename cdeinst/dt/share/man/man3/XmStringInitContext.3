'\" t
...\" StrIni.sgm /main/8 1996/09/08 21:05:48 rws $
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "XmStringInitContext" "library call"
.SH "NAME"
\fBXmStringInitContext\fP \(em A compound string function that creates a data structure for scanning an XmString component by component
.iX "XmStringInitContext"
.iX "compound string functions" "XmStringInitContext"
.SH "SYNOPSIS"
.PP
.nf
#include <Xm/Xm\&.h>
\fBBoolean \fBXmStringInitContext\fP\fR(
\fBXmStringContext \fB* context\fR\fR,
\fBXmString \fBstring\fR\fR);
.fi
.SH "DESCRIPTION"
.PP
\fBXmStringInitContext\fP
creates a context to allow applications to read out the
contents of a compound string component by component\&.
A Boolean status is returned to indicate that the context could not be
initalized\&.
.PP
If the function returns True, the function will allocate space to hold the
returned \fIcontext\fP\&. The application is responsible for managing the allocated
space\&. The memory can be recovered by calling \fBXmStringFreeContext\fP\&.
.IP "\fIcontext\fP" 10
Specifies a pointer to the allocated context
.IP "\fIstring\fP" 10
Specifies the string
.SH "RETURN"
.PP
Returns True if the context was allocated
.SH "RELATED"
.PP
\fBXmStringCreate\fP(3)\&.
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:42
