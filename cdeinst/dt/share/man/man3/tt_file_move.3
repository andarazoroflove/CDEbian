'\" t
...\" fil_move.sgm /main/5 1996/08/30 12:46:39 rws $
...\" fil_move.sgm /main/5 1996/08/30 12:46:39 rws $-->
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "tt_file_move" "library call"
.SH "NAME"
\fBtt_file_move\fP \(em move objects from one file to another
.SH "SYNOPSIS"
.PP
.nf
#include <Tt/tt_c\&.h>
\fBTt_status \fBtt_file_move\fP\fR(
\fBconst char *\fBoldfilepath\fR\fR,
\fBconst char *\fBnewfilepath\fR\fR);
.fi
.SH "DESCRIPTION"
.PP
The
\fBtt_file_move\fP function
destroys all objects that exist on the files and directories rooted at
\fInewfilepath\fP, then moves all objects that exist on
\fIoldfilepath\fP to
\fInewfilepath\fP\&.
.PP
If
\fIoldfilepath\fP and
\fInewfilepath\fP reside in the same file system,
\fBtt_file_move\fP replaces
\fIoldfilepath\fP with
\fInewfilepath\fP in the path associated with every object in
that file system; that is, all the objects in the directory tree rooted at
\fIoldfilepath\fP are overlaid onto
\fInewfilepath\fP\&. In this mode, the behavior of
\fBtt_file_move\fP is similar to
\fBrename\fP(2)\&.
.PP
If
\fIoldfilepath\fP and
\fInewfilepath\fP reside in different file systems, neither can be a directory\&.
.PP
The
\fIoldfilepath\fP argument is the name of the file or directory whose objects are to be moved\&.
The
\fInewfilepath\fP argument is the name of the file or directory to which the objects
are to be moved\&.
.SH "RETURN VALUE"
.PP
Upon successful completion, the
\fBtt_file_move\fP function returns the status of the operation as one of the following
\fBTt_status\fR values:
.IP "TT_OK" 10
The operation completed successfully\&.
.IP "TT_ERR_ACCESS" 10
The user does not have the necessary access to the object and/or the process\&.
.IP "TT_ERR_DBAVAIL" 10
The ToolTalk service could not access the
ToolTalk database needed for this operation\&.
.IP "TT_ERR_DBEXIST" 10
The ToolTalk service could not access the
specified ToolTalk database in the expected place\&.
.IP "TT_ERR_FILE" 10
The specified file does not exist or it is inaccessible\&.
.IP "TT_ERR_NOMP" 10
The
\fBttsession\fP(1) process is not running and the ToolTalk service cannot restart it\&.
.IP "TT_ERR_PATH" 10
The specified pathname included an unsearchable directory,
or
\fIoldfilepath\fP and
\fInewfilepath\fP reside in different file systems, and either is a directory\&.
.IP "TT_ERR_POINTER" 10
The pointer passed does not point to an object of
the correct type for this operation\&.
.SH "SEE ALSO"
.PP
\fBTt/tt_c\&.h - Tttt_c\fP(5), \fBtt_file_copy\fP(3), \fBtt_file_destroy\fP(3); \fBrename\fP(2)\&. 
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:40
