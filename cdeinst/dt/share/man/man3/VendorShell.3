'\" t
...\" Vendor.sgm /main/16 1996/10/29 11:40:55 cdedoc $
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "VendorShell" "library call"
.SH "NAME"
\fBVendorShell\fP \(em The VendorShell widget class
.iX "VendorShell"
.iX "widget class" "VendorShell"
.SH "SYNOPSIS"
.PP
.nf
#include <Xm/Xm\&.h>
#include <X11/Shell\&.h>
.fi
.SH "DESCRIPTION"
.PP
VendorShell is a Motif widget class used as a supporting superclass for
all shell classes that are visible to the window manager and that are
not override redirect\&.
It contains resources that describe the MWM-specific look and feel\&.
It also manages the MWM-specific communication needed by all VendorShell
subclasses\&.
See the \fBmwm\fP reference page for more information\&.
.PP
If an application uses the \fBXmNmwmDecorations\fP,
\fBXmNmwmFunctions\fP, or \fBXmNmwmInputMode\fP resource, it should
include the file \fBXm/MwmUtil\&.h\fP\&.
.PP
Setting \fBXmNheight\fP, \fBXmNwidth\fP, or \fBXmNborderWidth\fP for
either a VendorShell or its managed child usually sets that resource to the
same value in both the parent and the child\&. When an off-the-spot input
method exists, the height and width of the shell may be greater than
those of the managed child in order to accommodate the input method\&.
In this case, setting \fBXmNheight\fP or \fBXmNwidth\fP for the
shell does not necessarily set that resource to the same value in
the managed child, and setting \fBXmNheight\fP or \fBXmNwidth\fP
for the child does not necessarily set that resource to the same
value in the shell\&.
.PP
For the managed child of a VendorShell, regardless of the value
of the shell\&'s \fBXmNallowShellResize\fP, setting \fBXmNx\fP or
\fBXmNy\fP sets the corresponding resource of the parent but does
not change the child\&'s position relative to the parent\&.
\fBXtGetValues\fP for the child\&'s \fBXmNx\fP or \fBXmNy\fP yields the
value of the corresponding resource in the parent\&.
The x and y-coordinates of the child\&'s upper left outside
corner relative to the parent\&'s upper left inside corner are both 0 (zero)
minus the value of \fBXmNborderWidth\fP\&.
.PP
Note that the \fIInter-Client Communication Conventions Manual\fP (ICCCM)
allows a window manager to change or control the border width of a reparented
top-level window\&.
.PP
VendorShell holds the \fBXmQTspecifyRenderTable\fP trait\&.
.SS "Classes"
.PP
VendorShell inherits behavior, resources, and traits from the \fBCore\fP,
\fBComposite\fP, \fBShell\fP, and
\fBWMShell\fP classes\&.
.PP
The class pointer is \fBvendorShellWidgetClass\fP\&.
.PP
The class name is \fBVendorShell\fP\&.
.SS "New Resources"
.PP
The following table defines a set of widget resources used by the programmer
to specify data\&. The programmer can also set the resource values for the
inherited classes to set attributes for this widget\&. To reference a
subresource by name or by class in a \fB\&.Xdefaults\fP file, remove the \fBXmN\fP or
\fBXmC\fP prefix and use the remaining letters\&. To specify one of the defined
values for a subresource in a \fB\&.Xdefaults\fP file, remove the \fBXm\fP prefix and use
the remaining letters (in either lowercase or uppercase, but include any
underscores between words)\&.
The codes in the access column indicate if the given subresource can be
set at creation time (C),
set by using \fBXtSetValues\fP (S),
retrieved by using \fBXtGetValues\fP (G), or is not applicable (N/A)\&.
.TS
tab() box;
c s s s s
l| l| l| l| l.
\fBVendorShell Resource Set\fP
\fBName\fP\fBClass\fP\fBType\fP\fBDefault\fP\fBAccess\fP
_____
XmNaudibleWarningXmCAudibleWarningunsigned charXmBELLCSG
_____
XmNbuttonFontListXmCButtonFontListXmFontListdynamicCSG
_____
XmNbuttonRenderTableXmCButtonRenderTableXmRenderTabledynamicCSG
_____
XmNdefaultFontListXmCDefaultFontListXmFontListdynamicCG
_____
XmNdeleteResponseXmCDeleteResponseunsigned charXmDESTROYCSG
_____
XmNinputMethodXmCInputMethodstringNULLCSG
_____
XmNinputPolicyXmCInputPolicyXmInputPolicyXmPER_SHELLCSG
_____
XmNkeyboardFocusPolicyXmCKeyboardFocusPolicyunsigned charXmEXPLICITCSG
_____
XmNlabelFontListXmCLabelFontListXmFontListdynamicCSG
_____
XmNlabelRenderTableXmCLabelRenderTabelXmRenderTabledynamicCSG
_____
XmNlayoutDirectionXmCLayoutDirectionXmDirectionXmLEFT_TO_RIGHTCG
_____
XmNmwmDecorationsXmCMwmDecorationsint-1CG
_____
XmNmwmFunctionsXmCMwmFunctionsint-1CG
_____
XmNmwmInputModeXmCMwmInputModeint-1CG
_____
XmNmwmMenuXmCMwmMenuStringNULLCG
_____
XmNpreeditTypeXmCPreeditTypeStringdynamicCSG
_____
XmNverifyPreeditXmCVerifyPreeditBooleanFalseCSG
_____
XmNshellUnitTypeXmCShellUnitTypeunsigned charXmPIXELSCSG
_____
XmNtextFontListXmCTextFontListXmFontListdynamicCSG
_____
XmNtextRenderTableXmCTextRenderTableXmRenderTabledynamicCSG
_____
XmNunitTypeXmCUnitTypeunsigned charXmPIXELSCSG
_____
XmNuseAsyncGeometryXmCUseAsyncGeometryBooleanFalseCSG
_____
.TE
.IP "\fBXmNaudibleWarning\fP" 10
Determines whether an action activates its associated audible cue\&.
The possible values are \fBXmBELL\fP and \fBXmNONE\fP\&.
.IP "\fBXmNbuttonFontList\fP" 10
Specifies the font list used for button descendants\&. See the
\fBXmNbuttonRenderTable\fP resource\&.
.IP "\fBXmNbuttonRenderTable\fP" 10
Specifies the render table used for VendorShell\&'s button descendants\&.
If this value is NULL at initialization and if the value of
\fBXmNdefaultFontList\fP is not NULL, \fBXmNbuttonRenderTable\fP
is initialized to the value of \fBXmNdefaultFontList\fP\&. If
the value of \fBXmNdefaultFontList\fP is NULL,
the parent hierarchy of the widget is searched for
an ancestor that holds the \fBXmQTspecifyRenderTable\fP trait\&.
If such an ancestor is found,
\fBXmNbuttonRenderTable\fP is initialized to the
\fBXmBUTTON_RENDER_TABLE\fP value
of the ancestor widget\&. If no such ancestor is found, the default
is implementation dependent\&. Refer to
\fBXmRenderTable\fP(3) for more information on the creation and structure
of a render table\&.
.IP "\fBXmNdefaultFontList\fP" 10
Specifies a default font list for VendorShell\&'s descendants\&.
This resource is obsolete and exists for compatibility with
earlier releases\&. It has been replaced by \fBXmNbuttonFontList\fP,
\fBXmNlabelFontList\fP, and \fBXmNtextFontList\fP\&.
.IP "\fBXmNdeleteResponse\fP" 10
Determines what action the shell takes in response to a
\fBWM_DELETE_WINDOW\fP message\&.
The setting can be one of three values: \fBXmDESTROY\fP, \fBXmUNMAP\fP,
and \fBXmDO_NOTHING\fP\&.
The resource is scanned, and the appropriate action is taken after the
\fBWM_DELETE_WINDOW\fP callback list (if any) that is registered with
the Protocol manager has been called\&.
.IP "\fBXmNinputMethod\fP" 10
Specifies the string that sets the locale modifier for the input
method\&.
When \fBXtGetValues\fP is called on this resource, the returned value
is a pointer to the actual resource value and
should not be freed\&.
.IP "\fBXmNinputPolicy\fP" 10
Specifies the policy to follow for creating an
Input Context (IC) for this shell\&. This resource can have the
following values:
.RS
.IP "\fBXmPER_SHELL\fP" 10
Specifies that only one XIC is created per shell\&.
.IP "\fBXmPER_WIDGET\fP" 10
Specifies that one XIC is created for each widget\&.
.RE
.IP "\fBXmNkeyboardFocusPolicy\fP" 10
Determines allocation of keyboard focus within the widget hierarchy rooted
at this shell\&. The X keyboard focus must be directed to somewhere in the
hierarchy for this client-side focus management to take effect\&.
Possible values are \fBXmEXPLICIT\fP, specifying a click-to-type policy,
and \fBXmPOINTER\fP, specifying a pointer-driven policy\&.
.IP "\fBXmNlabelFontList\fP" 10
Specifies the font list used for label descendants\&. See the
\fBXmNlabelRenderTable\fP resource\&.
.IP "\fBXmNlabelRenderTable\fP" 10
Specifies the font list used for VendorShell\&'s label descendants
(Labels and LabelGadgets)\&. If this value is NULL at initialization
and if the value of \fBXmNdefaultFontList\fP is not NULL,
\fBXmNlabelFontList\fP is initialized to the value of
\fBXmNdefaultFontList\fP\&. If the value of \fBXmNdefaultFontList\fP is
NULL, the parent hierarchy of the widget is searched
for an ancestor that holds the \fBXmQTspecifyRenderTable\fP trait\&.
If such
an ancestor is found, \fBXmNlabelRenderTable\fP is initialized to the
\fBXmLABEL_RENDER_TABLE\fP of the ancestor widget\&. If no such ancestor
is found, the default is implementation dependent\&. Refer to
\fBXmRenderTable\fP(3) for more information on the creation and structure
of a render table\&.
.IP "\fBXmNlayoutDirection\fP" 10
Specifies the direction in which the subwidgets, children of a
widget, or other visual components are to be laid out\&. This policy
will apply as the default layout policy for all descendants of this
VendorShell\&.
.IP "\fBXmNmwmDecorations\fP" 10
Specifies the decoration flags (specific decorations to add or remove
from the window manager frame) for the \fB_MOTIF_WM_HINTS\fP property\&.
If any decoration flags are specified by the \fB_MOTIF_WM_HINTS\fP
property, only decorations indicated by both that property and the MWM
\fBclientDecoration\fP and \fBtransientDecoration\fP resources are displayed\&.
If no decoration flags are specified by the \fB_MOTIF_WM_HINTS\fP property,
decorations indicated by the MWM \fBclientDecoration\fP and
\fBtransientDecoration\fP resources are displayed\&.
The default for the \fBXmNmwmDecorations\fP resource
is not to specify any decoration flags for the \fB_MOTIF_WM_HINTS\fP property\&.
.IP "" 10
The value of this resource is the bitwise inclusive OR of one or more
flag bits\&.
The possible flag bit constants, defined in the include
file \fBXm/MwmUtil\&.h\fP, are
.RS
.IP "\fBMWM_DECOR_ALL\fP" 10
All decorations \fIexcept\fP those specified by
other flag bits that are set
.IP "\fBMWM_DECOR_BORDER\fP" 10
Client window border
.IP "\fBMWM_DECOR_RESIZEH\fP" 10
Resize frame handles
.IP "\fBMWM_DECOR_TITLE\fP" 10
Title bar
.IP "\fBMWM_DECOR_MENU\fP" 10
Window menu button
.IP "\fBMWM_DECOR_MINIMIZE\fP" 10
Minimize window button
.IP "\fBMWM_DECOR_MAXIMIZE\fP" 10
Maximize window button
.RE
.IP "\fBXmNmwmFunctions\fP" 10
Specifies the function flags (specific window manager functions to
apply or not apply to the client window) for the \fB_MOTIF_WM_HINTS\fP
property\&.
If any function flags are specified by the \fB_MOTIF_WM_HINTS\fP
property, only functions indicated by both that property and the MWM
\fBclientFunctions\fP and \fBtransientFunctions\fP resources are
applied\&.
If no function flags are specified by the \fB_MOTIF_WM_HINTS\fP
property, functions indicated by the MWM \fBclientFunctions\fP and
\fBtransientFunctions\fP resources are applied\&.
The default for the \fBXmNmwmFunctions\fP resource is not to specify any
function flags for the \fB_MOTIF_WM_HINTS\fP property\&.
.IP "" 10
The value of this resource is the bitwise inclusive OR of one or more
flag bits\&.
The possible flag bit constants, defined in the include
file \fBXm/MwmUtil\&.h\fP, are
.RS
.IP "\fBMWM_FUNC_ALL\fP" 10
All functions \fIexcept\fP those specified by
other flag bits that are set
.IP "\fBMWM_FUNC_RESIZE\fP" 10
\fBf\&.resize\fP
.IP "\fBMWM_FUNC_MOVE\fP" 10
\fBf\&.move\fP
.IP "\fBMWM_FUNC_MINIMIZE\fP" 10
\fBf\&.minimize\fP
.IP "\fBMWM_FUNC_MAXIMIZE\fP" 10
\fBf\&.maximize\fP
.IP "\fBMWM_FUNC_CLOSE\fP" 10
\fBf\&.kill\fP
.RE
.IP "\fBXmNmwmInputMode\fP" 10
Specifies the input mode flag (application modal or system modal input
constraints) for the \fB_MOTIF_WM_HINTS\fP property\&.
If no input mode flag is specified by the \fB_MOTIF_WM_HINTS\fP
property, no input constraints are applied, and input goes to any
window\&.
The default for the \fBXmNmwmInputMode\fP resource is not to specify any
input mode flag for the \fB_MOTIF_WM_HINTS\fP property\&.
.IP "" 10
An application that sets input constraints on a dialog usually uses the
BulletinBoard\&'s \fBXmNdialogStyle\fP resource rather than the parent
DialogShell\&'s \fBXmNmwmInputMode\fP resource\&.
.IP "" 10
The possible values for this resource, defined in the
include file \fBXm/MwmUtil\&.h\fP, are
.RS
.IP "\fBMWM_INPUT_MODELESS\fP" 10
Input goes to any window\&.
.IP "\fBMWM_INPUT_PRIMARY_APPLICATION_MODAL\fP" 10
Input does not
go to ancestors of this window\&.
.IP "\fBMWM_INPUT_SYSTEM_MODAL\fP" 10
Input goes only to this window\&.
.IP "\fBMWM_INPUT_FULL_APPLICATION_MODAL\fP" 10
Input does not go to other
windows in this application\&.
.RE
.IP "\fBXmNmwmMenu\fP" 10
Specifies the menu items that the Motif window manager should add to the end
of the window menu\&. The string contains a list of items separated
by \fB\n\fP with the following format:
.PP
.nf
\fIlabel [mnemonic] [accelerator] function\fP
.fi
.IP "" 10
If more than one item is specified, the items should be separated by a
newline character\&.
.IP "" 10
When \fBXtGetValues\fP is called on this resource, the returned value
is a pointer to the actual resource value and
should not be freed\&.
.IP "\fBXmNpreeditType\fP" 10
Specifies the input method style or styles available to the input
manager\&. The resource can be a comma-separated list of the following
values:
.TS
tab() allbox;
c s
l| l|.
\fBPreedit Values\fP
\fBPreedit Value\fP\fBXIM Style\fP
__
OffTheSpotXIMPreeditArea
__
RootXIMPreeditNothing
__
NoneXIMPreeditNone
__
OverTheSpotXIMPreeditPosition
__
OnTheSpotXIMPreeditCallbacks
__
.TE
.IP "" 10
When \fBXtGetValues\fP is called on this resource, the returned value
is a pointer to the actual resource value and
should not be freed\&.
.IP "\fBXmNshellUnitType\fP" 10
This resource is obsolete, and is included only for compatibility with
earlier releases of Motif\&. Use the \fBXmNunitType\fP resource
instead\&.
.IP "\fBXmNtextFontList\fP" 10
Specifies the font list used for text descendants\&. See the
\fBXmNtextRenderTable\fP resource\&.
.IP "\fBXmNtextRenderTable\fP" 10
Specifies the render table used for VendorShell\&'s Text and List
descendants\&. If this value is NULL at initialization
and if the value of \fBXmNdefaultFontList\fP is not NULL,
\fBXmNtextRenderTable\fP is initialized to the value of
\fBXmNdefaultFontList\fP\&. If the value of \fBXmNdefaultFontList\fP is
NULL, the parent hierarchy of the widget is searched
for an ancestor that holds the \fBXmQTspecifyRenderTable\fP trait\&.
If such
an ancestor is found, \fBXmNtextRenderTable\fP is initialized to the
\fBXmTEXT_RENDER_TABLE\fP value of the ancestor widget\&. If no such ancestor
is found, the default is implementation dependent\&.
Refer to
\fBXmRenderTable\fP(3) for more information on the creation and structure
of a render table\&.
.IP "\fBXmNunitType\fP" 10
Provides the basic support for resolution independence\&. It defines
the type of units a widget uses with sizing and positioning resources\&.
The resource has a default unit type of \fBXmPIXELS\fP\&.
.IP "" 10
The unit type can also be specified in resource files, with the
following format:
.PP
.nf
\f(CW\fI<floating value><unit>\fP\fR
.fi
.PP
.IP "" 10
where:
.RS
.IP "\fIunit\fP" 10
is <" ", pixels, inches, centimeters, millimeters, points, font units>
.IP "\fIpixels\fP" 10
is <\fIpix\fP, \fIpixel\fP, \fIpixels\fP>
.IP "\fIinches\fP" 10
is <\fIin\fP, \fIinch\fP, \fIinches\fP>
.IP "\fIcentimeter\fP" 10
is <\fIcm\fP, \fIcentimeter\fP, \fIcentimeters\fP>
.IP "\fImillimeters\fP" 10
is <\fImm\fP, \fImillimeter\fP, \fImillimeters\fP>
.IP "\fBpoints\fP" 10
is <\fIpt\fP, \fIpoint\fP, \fIpoints\fP>
.IP "\fBfont units\fP" 10
is <\fIfu\fP, \fBfont_unit\fP, \fBfont_units\fP>
.IP "\fIfloat\fP" 10
is {"+"|"-"}{{<"0"-"9">*}\&.}<"0"-"9">*
.IP "" 10
Note that the type Dimension must always be positive\&.
.RE
.IP "" 10
For example,
.PP
.nf
\f(CWxmfonts*XmMainWindow\&.height: 10\&.4cm
*PostIn\&.width: 3inches\fR
.fi
.PP
.IP "" 10
\fBXmNunitType\fP can have the following values:
.RS
.IP "\fBXmPIXELS\fP" 10
All values provided to the widget are treated as normal
pixel values\&.
.IP "\fBXmMILLIMETERS\fP" 10
All values provided to the widget are treated as normal millimeter
values\&.
.IP "\fBXm100TH_MILLIMETERS\fP" 10
All values provided to the widget are treated
as 1/100 of a millimeter\&.
.IP "\fBXmCENTIMETERS\fP" 10
All values provided to the widget are treated as normal centimeter
values\&.
.IP "\fBXmINCHES\fP" 10
All values provided to the widget are treated as normal inch
values\&.
.IP "\fBXm1000TH_INCHES\fP" 10
All values provided to the widget are treated as
1/1000 of an inch\&.
.IP "\fBXmPOINTS\fP" 10
All values provided to the widget are treated as normal point
values\&. A point is a unit used in text processing
applications and is defined as 1/72 of an inch\&.
.IP "\fBXm100TH_POINTS\fP" 10
All values provided to the widget are treated as
1/100 of a point\&. A point is a unit used in text processing
applications and is defined as 1/72 of an inch\&.
.IP "\fBXmFONT_UNITS\fP" 10
All values provided to the widget are treated as normal font
units\&. A font unit has horizontal and vertical components\&.
These are the values of the XmScreen resources \fBXmNhorizontalFontUnit\fP
and \fBXmNverticalFontUnit\fP\&.
.IP "\fBXm100TH_FONT_UNITS\fP" 10
All values provided to the widget are treated as 1/100 of a font unit\&.
A font unit has horizontal and vertical components\&. These are the
values of the \fBXmScreen\fP resources \fBXmNhorizontalFontUnit\fP and
\fBXmNverticalFontUnit\fP\&.
.RE
.IP "" 10
For more information about units, refer to the \fBXmConvertUnits\fP
reference page\&.
.IP "\fBXmNuseAsyncGeometry\fP" 10
Specifies whether the geometry manager should wait for confirmation of a
geometry request to the window manager\&.
When the value of this resource is True, the geometry manager forces
\fBXmNwaitForWm\fP to False and \fBXmNwmTimeout\fP to 0, and it relies
on asynchronous notification\&.
When the value of this resource is False, \fBXmNwaitForWm\fP and
\fBXmNwmTimeout\fP are unaffected\&.
The default is False\&.
.SS "Inherited Resources"
.PP
VendorShell inherits behavior and resources from the
superclasses described in the following tables\&.
For a complete description of each resource, refer to the
reference page for that superclass\&.
.TS
tab() box;
c s s s s
l| l| l| l| l.
\fBWMShell Resource Set\fP
\fBName\fP\fBClass\fP\fBType\fP\fBDefault\fP\fBAccess\fP
_____
XmNbaseHeightXmCBaseHeightintXtUnspecifiedShellIntCSG
_____
XmNbaseWidthXmCBaseWidthintXtUnspecifiedShellIntCSG
_____
XmNheightIncXmCHeightIncintXtUnspecifiedShellIntCSG
_____
XmNiconMaskXmCIconMaskPixmapNULLCSG
_____
XmNiconPixmapXmCIconPixmapPixmapNULLCSG
_____
XmNiconWindowXmCIconWindowWindowNULLCSG
_____
XmNiconXXmCIconXintXtUnspecifiedShellIntCSG
_____
XmNiconYXmCIconYintXtUnspecifiedShellIntCSG
_____
XmNinitialStateXmCInitialStateintNormalStateCSG
_____
XmNinputXmCInputBooleanTrueCSG
_____
XmNmaxAspectXXmCMaxAspectXintXtUnspecifiedShellIntCSG
_____
XmNmaxAspectYXmCMaxAspectYintXtUnspecifiedShellIntCSG
_____
XmNmaxHeightXmCMaxHeightintXtUnspecifiedShellIntCSG
_____
XmNmaxWidthXmCMaxWidthintXtUnspecifiedShellIntCSG
_____
XmNminAspectXXmCMinAspectXintXtUnspecifiedShellIntCSG
_____
XmNminAspectYXmCMinAspectYintXtUnspecifiedShellIntCSG
_____
XmNminHeightXmCMinHeightintXtUnspecifiedShellIntCSG
_____
XmNminWidthXmCMinWidthintXtUnspecifiedShellIntCSG
_____
XmNtitleXmCTitleStringdynamicCSG
_____
XmNtitleEncodingXmCTitleEncodingAtomdynamicCSG
_____
XmNtransientXmCTransientBooleanFalseCSG
_____
XmNwaitForWmXmCWaitForWmBooleanTrueCSG
_____
XmNwidthIncXmCWidthIncintXtUnspecifiedShellIntCSG
_____
XmNwindowGroupXmCWindowGroupWindowdynamicCSG
_____
mNwinGravityXmCWinGravityintdynamicCSG
_____
XmNwmTimeoutXmCWmTimeoutint5000 msCSG
_____
.TE
.TS
tab() box;
c s s s s
l| l| l| l| l.
\fBShell Resource Set\fP
\fBName\fP\fBClass\fP\fBType\fP\fBDefault\fP\fBAccess\fP
_____
XmNallowShellResizeXmCAllowShellResizeBooleanFalseCG
_____
XmNcreatePopupChildProcXmCCreatePopupChildProcXtCreatePopupChildProcNULLCSG
_____
XmNgeometryXmCGeometryStringNULLCSG
_____
XmNoverrideRedirectXmCOverrideRedirectBooleanFalseCSG
_____
XmNpopdownCallbackXmCCallbackXtCallbackListNULLC
_____
XmNpopupCallbackXmCCallbackXtCallbackListNULLC
_____
XmNsaveUnderXmCSaveUnderBooleanFalseCSG
_____
XmNvisualXmCVisualVisual *CopyFromParentCSG
_____
.TE
.TS
tab() box;
c s s s s
l| l| l| l| l.
\fBComposite Resource Set\fP
\fBName\fP\fBClass\fP\fBType\fP\fBDefault\fP\fBAccess\fP
_____
XmNchildrenXmCReadOnlyWidgetListNULLG
_____
XmNinsertPositionXmCInsertPositionXtOrderProcNULLCSG
_____
XmNnumChildrenXmCReadOnlyCardinal0G
_____
.TE
.TS
tab() box;
c s s s s
l| l| l| l| l.
\fBCore Resource Set\fP
\fBName\fP\fBClass\fP\fBType\fP\fBDefault\fP\fBAccess\fP
_____
XmNacceleratorsXmCAcceleratorsXtAcceleratorsdynamicCSG
_____
XmNancestorSensitiveXmCSensitiveBooleandynamicG
_____
XmNbackgroundXmCBackgroundPixeldynamicCSG
_____
XmNbackgroundPixmapXmCPixmapPixmapXmUNSPECIFIED_PIXMAPCSG
_____
XmNborderColorXmCBorderColorPixelXtDefaultForegroundCSG
_____
XmNborderPixmapXmCPixmapPixmapXmUNSPECIFIED_PIXMAPCSG
_____
XmNborderWidthXmCBorderWidthDimension0CSG
_____
XmNcolormapXmCColormapColormapdynamicCG
_____
XmNdepthXmCDepthintdynamicCG
_____
XmNdestroyCallbackXmCCallbackXtCallbackListNULLC
_____
XmNheightXmCHeightDimensiondynamicCSG
_____
XmNinitialResourcesPersistentXmCInitialResourcesPersistentBooleanTrueC
_____
XmNmappedWhenManagedXmCMappedWhenManagedBooleanTrueCSG
_____
XmNscreenXmCScreenScreen *dynamicCG
_____
XmNsensitiveXmCSensitiveBooleanTrueCSG
_____
XmNtranslationsXmCTranslationsXtTranslationsdynamicCSG
_____
XmNwidthXmCWidthDimensiondynamicCSG
_____
XmNxXmCPositionPosition0CSG
_____
XmNyXmCPositionPosition0CSG
_____
.TE
.SS "Translations"
.PP
There are no translations for VendorShell\&.
.SH "RELATED"
.PP
\fBComposite\fP(3),
\fBCore\fP(3),
\fBmwm\fP(1),
\fBShell\fP(3),
\fBWMShell\fP(3),
\fBXmActivateProtocol\fP(3),
\fBXmActivateWMProtocol\fP(3),
\fBXmAddProtocolCallback\fP(3),
\fBXmAddWMProtocolCallback\fP(3),
\fBXmAddProtocols\fP(3),
\fBXmAddWMProtocols\fP(3),
\fBXmDeactivateProtocol\fP(3),
\fBXmDeactivateWMProtocol\fP(3),
\fBXmGetAtomName\fP(3),
\fBXmInternAtom\fP(3),
\fBXmIsMotifWMRunning\fP(3),
\fBXmRemoveProtocolCallback\fP(3),
\fBXmRemoveWMProtocolCallback\fP(3),
\fBXmRemoveProtocols\fP(3),
\fBXmRemoveWMProtocols\fP(3),
\fBXmScreen\fP(3),
\fBXmSetProtocolHooks\fP(3),
and \fBXmSetWMProtocolHooks\fP(3)\&.
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:41
