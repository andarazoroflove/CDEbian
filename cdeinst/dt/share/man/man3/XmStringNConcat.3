'\" t
...\" StrNCA.sgm /main/8 1996/09/08 21:06:20 rws $
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "XmStringNConcat" "library call"
.SH "NAME"
\fBXmStringNConcat\fP \(em A compound string function that appends a specified number of bytes to a compound string
.iX "XmStringNConcat"
.iX "compound string functions" "XmStringNConcat"
.SH "SYNOPSIS"
.PP
.nf
#include <Xm/Xm\&.h>
\fBXmString \fBXmStringNConcat\fP\fR(
\fBXmString \fBs1\fR\fR,
\fBXmString \fBs2\fR\fR,
\fBint \fBnum_bytes\fR\fR);
.fi
.SH "DESCRIPTION"
.PP
This function is obsolete and exists for compatibility with previous
releases\&. It is replaced by \fBXmStringConcat\fP\&.
\fBXmStringNConcat\fP appends a specified number of bytes from \fIs2\fP to
the end of \fIs1\fP, including tags, directional indicators, and
separators\&. It then returns the
resulting compound string\&. The original strings are preserved\&.
The function allocates space for the resulting compound string\&.
The application is responsible for managing the allocated space\&.
The application can recover the allocated space by calling \fBXmStringFree\fP\&.
.IP "\fIs1\fP" 10
Specifies the compound string to which a copy of \fIs2\fP is appended\&.
.IP "\fIs2\fP" 10
Specifies the compound string that is appended to the end of \fIs1\fP\&.
.IP "\fInum_bytes\fP" 10
Specifies the number of bytes of \fIs2\fP to append to \fIs1\fP\&.
If this value is less than the
length of \fIs2\fP, as many bytes as possible, but possibly fewer than
this value, will be appended to \fIs1\fP such that the resulting string
is still a valid compound string\&.
.SH "RETURN"
.PP
Returns a new compound string\&.
.SH "RELATED"
.PP
\fBXmStringCreate\fP(3) and \fBXmStringFree\fP(3)\&.
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:42
