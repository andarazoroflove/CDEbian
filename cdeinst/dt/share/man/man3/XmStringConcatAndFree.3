'\" t
...\" StrCoE.sgm /main/8 1996/09/08 21:03:37 rws $
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "XmStringConcatAndFree" "library call"
.SH "NAME"
\fBXmStringConcatAndFree\fP \(em A compound string function that appends one string to another and frees the original strings
.iX "XmStringConcatAndFree"
.iX "compound string functions" "XmStringConcatAndFree"
.SH "SYNOPSIS"
.PP
.nf
#include <Xm/Xm\&.h>
\fBXmString \fBXmStringConcatAndFree\fP\fR(
\fBXmString \fBs1\fR\fR,
\fBXmString \fBs2\fR\fR);
.fi
.SH "DESCRIPTION"
.PP
\fBXmStringConcatAndFree\fP copies \fIs2\fP to the end of \fIs1\fP and returns
a copy of the resulting compound string\&. The original strings are freed\&.
The function will allocate space to hold the returned compound string\&.
The application is responsible for managing the allocated space\&.
The application can recover the allocated space by calling \fBXmStringFree\fP\&.
.IP "\fIs1\fP" 10
Specifies the compound string to which a copy of \fIs2\fP is appended
.IP "\fIs2\fP" 10
Specifies the compound string that is appended to the end of \fIs1\fP
.PP
The \fBXmStringConcatAndFree\fP function works like the
\fBXmStringConcat\fP function, except that it frees the \fIs1\fP and
\fIs2\fP strings, and is therefore more efficient\&. You should use
\fBXmStringConcatAndFree\fP instead of \fBXmStringConcat\fP if you
want \fIs1\fP and \fIs2\fP to be freed afterwards\&.
.SH "RETURN"
.PP
Returns a new compound string\&.
.SH "RELATED"
.PP
\fBXmStringConcat\fP(3),
\fBXmStringCreate\fP(3), and
\fBXmStringFree\fP(3)\&.
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:42
