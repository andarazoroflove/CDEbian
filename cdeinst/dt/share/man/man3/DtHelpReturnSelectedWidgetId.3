'\" t
...\" HelpRetu.sgm /main/6 1996/08/30 13:03:58 rws $
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "DtHelpReturnSelectedWidgetId" "library call"
.SH "NAME"
\fBDtHelpReturnSelectedWidgetId\fP \(em select a widget or gadget
.SH "SYNOPSIS"
.PP
.nf
#include <Dt/Help\&.h>
\fBint \fBDtHelpReturnSelectedWidgetId\fP\fR(
\fBWidget \fBparent\fR\fR,
\fBString \fBcursor\fR\fR,
\fBWidget *\fBwidget\fR\fR);
.fi
.SH "DESCRIPTION"
.PP
The
\fBDtHelpReturnSelectedWidgetId\fP function provides an
interface for users to select a component within an application\&.
.PP
This function
grabs the pointer and returns the widget within which a button press occurs\&.
Pressing the escape key (ESC) aborts this function\&.
.PP
The
\fIparent\fP argument specifies the widget ID to use as the basis
of the interaction, usually a top level shell\&.
.PP
The
\fIcursor\fP argument specifies the cursor to be used for the pointer
during the interaction\&.
If a
\fBNULL\fP value is used,
\fBDtHelpReturnSelectedWidgetId\fP uses a default cursor value\&.
.PP
The
\fIwidget\fP argument is the return value (for example, the
selected widget)\&.
A
\fBNULL\fP value is returned on error\&.
.PP
The
\fBDtHelpReturnSelectedWidgetId\fP function allows applications to get the widget ID for
any widget in their user interface that the user has selected via the
pointer\&.
The application can then directly display a
help topic based on the selected widget, or dynamically
construct some help information based on the current context of the selected
item\&.
At any point while the question mark cursor is displayed, the user can
select the escape key to abort the function call, and a
\fBNULL\fP value is returned\&.
If the user selects any
item outside the current applications windows, an error status is
returned along with a
\fBNULL\fP value for the
\fIwidget\fP argument\&.
Refer to \fBXmTrackingLocate\fP(3) for a similar function\&.
.SH "RETURN VALUE"
.PP
Upon successful completion, the
\fBDtHelpReturnSelectedWidgetId\fP function returns one of the following status values:
.IP "DtHELP_SELECT_ERROR" 10
An error occurred while attempting to process the function\&.
.IP "DtHELP_SELECT_INVALID" 10
The user selected an invalid component that is not contained
in the current widget hierarchy\&.
.IP "DtHELP_SELECT_ABORT" 10
The user aborted the function (for example, pressed the escape key), and a
\fBNULL\fP widget value is passed back\&.
.IP "DtHELP_SELECT_VALID" 10
The user selected a valid component within the application, and the
\fIwidget\fP argument is the ID of the selected component\&.
.SH "SEE ALSO"
.PP
\fBDt/Help\&.h - DtHelp\fP(5), \fBDtCreateHelpQuickDialog\fP(3), \fBDtCreateHelpDialog\fP(3); \fBXmTrackingLocate\fP(3), 
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:40
