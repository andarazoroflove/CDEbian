'\" t
...\" LstReplD.sgm /main/8 1996/09/08 20:51:41 rws $
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "XmListReplaceItemsUnselected" "library call"
.SH "NAME"
\fBXmListReplaceItemsUnselected\fP \(em A List function that replaces items
in a list
.iX "XmListReplaceItemsUn\\%selected"
.iX "List functions" "XmListReplaceItemsUn\\%selected"
.SH "SYNOPSIS"
.PP
.nf
#include <Xm/List\&.h>
\fBvoid \fBXmListReplaceItemsUnselected\fP\fR(
\fBWidget \fBwidget\fR\fR,
\fBXmString *\fBold_items\fR\fR,
\fBint \fBitem_count\fR\fR,
\fBXmString *\fBnew_items\fR\fR);
.fi
.SH "DESCRIPTION"
.PP
\fBXmListReplaceItemsUnselected\fP replaces each specified item in the
list with a corresponding new item\&. The replacement items
remain unselected, even if they currently appear in the \fBXmNselectedItems\fP
list\&.
.IP "\fIwidget\fP" 10
Specifies the ID of the List widget to replace items in\&.
.IP "\fIold_items\fP" 10
Specifies a pointer to the list items to be replaced\&.
.IP "\fIitem_count\fP" 10
Specifies the number of elements in \fIold_items\fP and
\fInew_items\fP\&.
This number must be nonnegative\&.
.IP "\fInew_items\fP" 10
Specifies a pointer to the replacement items\&. Every
occurrence of each element of \fIold_items\fP is replaced
with the corresponding element from \fInew_items\fP\&. That
is, the first element of \fIold_items\fP is replaced with
the first element of \fInew_items\fP\&. The second element
of \fIold_items\fP is replaced with the second element of
\fInew_items\fP, and so on until \fIitem_count\fP is
reached\&. If an element in \fIold_items\fP does not exist
in the list, the corresponding entry in \fInew_items\fP
is skipped\&.
.PP
For a complete definition of List and its associated resources, see
\fBXmList\fP(3)\&.
.SH "RELATED"
.PP
\fBXmList\fP(3)\&.
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:41
