'\" t
...\" ClipbK.sgm /main/10 1996/09/25 10:24:50 cdedoc $
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "XmClipboardRegisterFormat" "library call"
.SH "NAME"
\fBXmClipboardRegisterFormat\fP \(em A clipboard function that registers a new format
.iX "XmClipboardRegisterFormat"
.iX "clipboard functions" "XmClipboardRegisterFormat"
.SH "SYNOPSIS"
.PP
.nf
#include <Xm/CutPaste\&.h>
int XmClipboardRegisterFormat (\fIdisplay, format_name, format_length\fP)
        Display \fI* display\fP;
        char    \fI* format_name\fP;
        int     \fIformat_length\fP;
\fB\fR(\fBvoid\fR)
.fi
.SH "DESCRIPTION"
.PP
\fBXmClipboardRegisterFormat\fP registers a new format\&. Each format
stored on the clipboard should have a length associated with it; this
length must be known to the clipboard routines\&. Formats are known as
targets in the \fIInter-Client Communication Conventions Manual\fP
(ICCCM)\&. All of the formats specified by
version 1\&.1 of the ICCCM
conventions are preregistered\&. Any other format that the application
wants to use must either be 8-bit
data or be registered via this routine\&.
Failure to
register the length of the data results in incompatible applications across
platforms having different byte-swapping orders\&.
.IP "\fIdisplay\fP" 10
Specifies a pointer to the \fBDisplay\fR structure that was returned in a
previous call to \fBXOpenDisplay\fP or \fBXtDisplay\fP\&.
.IP "\fIformat_name\fP" 10
Specifies the string name for the new format (target)\&.
.IP "\fIformat_length\fP" 10
Specifies the format length in bits (8, 16, or 32)\&.
.SH "RETURN"
.IP "\fBXmClipboardBadFormat\fP" 10
The \fIformat_name\fP must not be NULL, and the \fIformat_length\fP
must be 8, 16, or 32\&.
.IP "\fBXmClipboardSuccess\fP" 10
The function was successful\&.
.IP "\fBXmClipboardLocked\fP" 10
The function failed because the clipboard was locked by another
application\&. The application can continue to call the function again with
the same parameters until the lock goes away\&. This gives the application
the opportunity to ask if the user wants to keep trying or to give up
on the operation\&.
.IP "\fBXmClipboardFail\fP" 10
The function failed because the specified format was already registered with a
different length from that specified now\&. If a specified format was already
registered with the same
length as that specified now, \fBXmClipboardSuccess\fP is returned\&.
.SH "RELATED"
.PP
\fBXmClipboardStartCopy\fP(3)\&.
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:41
