'\" t
...\" DirectB.sgm /main/8 1996/09/08 20:39:00 rws $
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "XmDirectionMatch" "library call"
.SH "NAME"
\fBXmDirectionMatch\fP \(em A function that checks for a specified direction component
.iX "XmDirectionMatch"
.SH "SYNOPSIS"
.PP
.nf
#include <Xm/Xm\&.h>
Boolean XmDirectionMatch (\fId1, d2\fP)
        XmDirection     \fId1\fP;
        XmDirection     \fId2\fP;
\fB\fR(\fBvoid\fR)
.fi
.SH "DESCRIPTION"
.PP
\fBXmDirectionMatch\fP compares two \fBXmDirection\fR values\&.
The function returns a Boolean value depending on whether or
not the two input values "match\&."
The simplest match is when \fId1\fP and \fId2\fP are identical\&.
However, other matches are possible\&.
\fBXmDirectionMatch\fP attempts to compare specified bits only;
nonspecified bits automatically match\&.
.PP
For example, suppose that \fId1\fP equals
\fBXmTOP_TO_BOTTOM_RIGHT_TO_LEFT\fP\&. In this case, the function will
return True if \fId2\fP equals either \fBXmRIGHT_TO_LEFT\fP or
\fBXmTOP_TO_BOTTOM\fP\&. However, the function will return False if
\fId2\fP equals \fBXmTOP_TO_BOTTOM_LEFT_TO_RIGHT\fP,
\fBXmBOTTOM_TO_TOP_RIGHT_TO_LEFT\fP, or
\fBXmBOTTOM_TO_TOP_LEFT_TO_RIGHT\fP\&.
.PP
Note that direction can be thought of as having three components, a
horizontal component, a vertical component, and the precedence among
them\&. This means that in addition to the previously mentioned
directions, the function will still return False if \fId1\fP equals
\fBXmTOP_TO_BOTTOM_RIGHT_TO_LEFT\fP and \fId2\fP equals
\fBXmRIGHT_TO_LEFT_TOP_TO_BOTTOM\fP\&.
.IP "\fId1\fP" 10
Specifies an \fBXmDirection\fR value\&.
.IP "\fId2\fP" 10
Specifies an \fBXmDirection\fR value\&.
.SH "RETURN VALUES"
.PP
Returns True if \fId1\fP "matches" \fId2\fP; otherwise, returns False\&.
.SH "RELATED INFORMATION"
.PP
\fBXmDirection\fP(3),
\fBXmDirectionMatchPartial\fP(3),
\fBXmDirectionToStringDirection\fP(3), \fBXmString\fP(3),
\fBXmStringDirection\fP(3), and
\fBXmStringDirectionToDirection\fP(3)\&.
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:41
