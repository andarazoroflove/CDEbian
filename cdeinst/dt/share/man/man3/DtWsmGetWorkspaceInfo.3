'\" t
...\" GetWsInf.sgm /main/8 1996/09/23 14:36:47 cdedoc $
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "DtWsmGetWorkspaceInfo" "library call"
.SH "NAME"
\fBDtWsmGetWorkspaceInfo\fP \(em get detailed workspace information
.SH "SYNOPSIS"
.PP
.nf
#include <Dt/Wsm\&.h>
\fBint \fBDtWsmGetWorkspaceInfo\fP\fR(
\fBDisplay *\fBdisplay\fR\fR,
\fBWindow \fBroot\fR\fR,
\fBAtom \fBaWorkspace\fR\fR,
\fBDtWsmWorkspaceInfo **\fBppWsInfo\fR\fR);
.fi
.SH "DESCRIPTION"
.PP
The \fBDtWsmGetWorkspaceInfo\fP function works with the XCDE workspace manager, \fBdtwm\fP(1), and
returns detailed information on a specific workspace\&.
.PP
The \fIdisplay\fP argument is the X display\&.
.PP
The \fIroot\fP argument is the root window
of the screen of interest\&.
.PP
The \fIaWorkspace\fP argument is the workspace name (converted
to an X atom)\&.
.PP
The \fI*ppWsInfo\fP argument is the address of a variable
to receive the returned pointer to the workspace information data\&.
.PP
The \fBDtWsmWorkspaceInfo\fR structure
contains at least the following members:
.TS
tab();
lw(0.964912i) lw(1.865497i) lw(2.669591i).
\f(CWAtom\fP\f(CWworkspace\fPT{
The workspace name (converted to an X atom)\&.
T}
\f(CWunsigned long\fP\f(CWbg\fPT{
The pixel ID used for the background color
of the backdrop\&.
T}
\f(CWunsigned long\fP\f(CWfg\fPT{
The pixel ID used for the foreground color
of the backdrop\&.
T}
\f(CWAtom\fP\f(CWbackdropName\fPT{
The backdrop file name (converted to an X
atom)\&. The file must be in either X Bitmap file format (with extension \fB\&.bm\fP) or X Pixmap file format (with extension \fB\&.pm\fP)\&.
The workspace management services look for the file along the same path used
for searching icons\&. The directory \fB/usr/dt/backdrops\fP is
the default directory if the file cannot be found along the icon search path\&.
T}
\f(CWint\fP\f(CWcolorSetId\fPT{
The colorset number used for this workspace,
which affects the backdrop color and the button color for this workspace on
the front panel\&.
T}
\f(CWchar\fP\f(CW*pchTitle\fPT{
The title displayed in the button for this
workspace on the front panel\&. This string is interpreted in the locale in
which the XCDE workspace manager, \fBdtwm\fP(1), is
running\&. The title is different from the workspace name\&. The workspace name,
when converted from an X atom, is used as the identifier for a workspace in
the workspace manager function calls\&. The XCDE workspace manager, \fBdtwm\fP(1)\&. also
uses the workspace name as a resource name; thus, the characters used in a
workspace name are restricted to the characters in the X Portable Character
Set\&. The workspace name for a workspace created from the front panel is generated
automatically by the XCDE workspace manager, \fBdtwm\fP(1)\&. 
T}
\f(CWWindow\fP\f(CW*backdropWindows\fPT{
A pointer to an array of windows that make
up the backdrop\&.
T}
\f(CWint\fP\f(CWnumBackdropWindows\fPT{
The number of elements in the \fIbackdropWindows\fP array\&.
T}
.TE
.SH "RETURN VALUE"
.PP
Upon successful completion, the \fBDtWsmGetWorkspaceInfo\fP
function returns Success and the workspace manager returns in \fI*ppWsInfo\fP a pointer to a \fBDtWsmInfo\fP structure that contains
information about the workspace \fIaWorkspace\fP; otherwise,
it returns a value not equal to Success\&.
.SH "APPLICATION USAGE"
.PP
If the \fBDtWsmGetWorkspaceInfo\fP function is not successful,
failure may be due to a memory allocation error or failure to find the correct
workspace information (that is, the XCDE workspace manager, \fBdtwm\fP(1), is
not running)\&. The application must use the \fBDtWsmFreeWorkspaceInfo\fP(3) function to free the data returned in \fI*ppWsInfo\fP\&.
The \fI*backdropWindows\fP pointer may be useful for applications
that are interested in some events on the root window\&. Since the backdrop
covers the root window, the backdrop catches the button events before they
reach the root\&.
.SH "SEE ALSO"
.PP
\fBDt/Wsm\&.h - DtWsm\fP(5),  \fBdtwm\fP(1), \fBDtWsmGetWorkspaceList\fP(3), \fBDtWsmFreeWorkspaceInfo\fP(3)\&.
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:40
