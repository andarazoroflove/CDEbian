'\" t
...\" TransfC.sgm /main/8 1996/08/30 16:20:38 rws $
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "XmTransferSetParameters" "library call"
.SH "NAME"
\fBXmTransferSetParameters\fP \(em A toolkit function that establishes parameters to be passed by the next call to XmTransferValue
.iX "XmTransferSetParameters"
.iX "toolkit functions" "XmTransferSetParameters"
.SH "SYNOPSIS"
.PP
.nf
#include <Xm/Transfer\&.h>
.sp \n(PDu
\fBvoid \fBXmTransferSetParameters\fP\fR(
\fBXtPointer \fBtransfer_id\fR\fR,
\fBXtPointer \fBparm\fR\fR,
\fBint \fBparm_fmt\fR\fR,
\fBunsigned long \fBparm_length\fR\fR,
\fBAtom \fBparm_type\fR\fR);
.fi
.SH "DESCRIPTION"
.PP
\fBXmTransferSetParameters\fP establishes a parameter definition\&.
Your application calls \fBXmTransferSetParameters\fP just before calling
\fBXmTransferValue\fP, and only if \fBXmTransferValue\fP needs
to transfer a value containing a parameter\&.
.IP "\fBtransfer_id\fP" 10
Specifies a unique indentifier for the data transfer operation\&.
The value must be the same as the value of the \fBtransfer_id\fP member
of the \fBXmDestinationCallbackStruct\fR passed to the
\fBXmNdestinationCallback\fP procedure\&.
.IP "\fIparm\fP" 10
Specifies parameters to be passed to the conversion routine (and the
\fBXmNconvertCallback\fP procedures, if any) of the widget that owns the
selection\&.
The type and length of parameters are target-specific\&.
If the target takes no parameters, the value is NULL\&.
.IP "\fIparm_fmt\fP" 10
Specifies whether the data in \fIparm\fP should be viewed as a list of
8-bit, 16-bit, or 32-bit quantities\&.
Possible values are 0 (when \fIparm\fP is NULL), 8, 16, and 32\&.
.IP "\fIparm_length\fP" 10
Specifies the number of elements of data in \fIparm\fP, where each
element has the number of bits specified by \fIparm_fmt\fP\&.
When \fIparm\fP is NULL, the value is 0\&.
.IP "\fIparm_type\fP" 10
Specifies the type of \fIparm\fP\&.
.SH "RELATED"
.PP
\fBXmTransferSendRequest\fP(3),
\fBXmTransferStartRequest\fP(3), and
\fBXmTransferValue\fP(3)\&.
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:42
