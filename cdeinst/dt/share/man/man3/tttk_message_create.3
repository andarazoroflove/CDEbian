'\" t
...\" m_create.sgm /main/5 1996/08/30 14:02:51 rws $
...\" m_create.sgm /main/5 1996/08/30 14:02:51 rws $-->
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "tttk_message_create" "library call"
.SH "NAME"
\fBtttk_message_create\fP \(em create a message conforming to the XCDE conventions
.SH "SYNOPSIS"
.PP
.nf
#include <Tt/tttk\&.h>
\fBTt_message \fBtttk_message_create\fP\fR(
\fBTt_message \fBcontext\fR\fR,
\fBTt_class \fBthe_class\fR\fR,
\fBTt_scope \fBthe_scope\fR\fR,
\fBconst char *\fBhandler\fR\fR,
\fBconst char *\fBop\fR\fR,
\fBTt_message_callback \fBcallback\fR\fR);
.fi
.SH "DESCRIPTION"
.PP
The
\fBtttk_message_create\fP function
creates a message that propagates inherited contexts
from one message to another\&.
The
\fBtttk_message_create\fP function creates a message and copies onto it all the context slots from
\fIcontext\fP whose slotname begins with the characters
\fBENV_\fP\&. It gives
the created message a
\fBTt_class\fR of
\fIthe_class\fP and a
\fBTt_scope\fR of
\fIthe_scope\fP\&. If
\fIhandler\fP is not
\fBNULL\fP, then
\fBtttk_message_create\fP addresses the message as a
\fBTT_HANDLER\fP to that
procid;
otherwise, it gives the message a
\fBTt_address\fR of
\fBTT_PROCEDURE\fP\&. It sets
the message\&'s op to
\fIop\fP if
\fIop\fP is not
\fBNULL\fP\&. If
\fIcallback\fP is not
\fBNULL\fP, \fBtttk_message_create\fP adds it to the message as a message callback\&.
.SH "RETURN VALUE"
.PP
Upon successful completion, the
\fBtttk_message_create\fP function
returns the created
\fBTt_message\fR, which can be modified, sent, and destroyed like any other
\fBTt_message\fR \fB;\fP otherwise, it returns an error pointer\&.
The application can use
\fBtt_ptr_error\fP(3) to extract one of the following
\fBTt_status\fR values from the returned handle:
.IP "TT_ERR_NOMEM" 10
There is insufficient memory available to perform the function\&.
.IP "TT_ERR_NOMP" 10
The
\fBttsession\fP(1) process is not running and the ToolTalk service cannot restart it\&.
.IP "TT_ERR_PROCID" 10
The specified process identifier is out of date or invalid\&.
.SH "SEE ALSO"
.PP
\fBTt/tttk\&.h - Tttttk\fP(5), \fBtt_message_create\fP(3), \fBtttk_message_create\fP(3), \fBttdt_file_notice\fP(3), \fBttdt_file_request\fP(3)\&.
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:41
