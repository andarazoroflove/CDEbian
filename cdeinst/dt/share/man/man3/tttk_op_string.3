'\" t
...\" op_str.sgm /main/5 1996/08/30 14:05:34 rws $
...\" op_str.sgm /main/5 1996/08/30 14:05:34 rws $-->
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "tttk_op_string" "library call"
.SH "NAME"
\fBtttk_op_string\fP \(em map a ToolTalk op code to a string
.SH "SYNOPSIS"
.PP
.nf
#include <Tt/tttk\&.h>
\fBchar \fB*tttk_op_string\fP\fR(
\fBTttk_op \fBopcode\fR\fR);
.fi
.SH "DESCRIPTION"
.PP
The
\fBtttk_op_string\fP function
returns a string containing the op for
\fIopcode\fP\&.
.SH "RETURN VALUE"
.PP
Upon successful completion, the
\fBtttk_op_string\fP function returns a string that can be freed using
\fBtt_free\fP(3); otherwise, it returns
\fBNULL\fP\&.
.SH "APPLICATION USAGE"
.PP
The distinctions in the
\fBTttk_op\fR enumerated type are for programmer convenience, and elements of
\fBTttk_op\fR do not necessarily map one-to-one with op strings, since ToolTalk
allows ops to be overloaded\&.
For example,
\fBTTME_EDIT\fP and
\fBTTME_COMPOSE\fP are overloaded on the same op
(\fBEdit\fP), and the messages
only vary by the
\fBTt_mode\fR of the first argument\&.
.SH "SEE ALSO"
.PP
\fBTt/tttk\&.h - Tttttk\fP(5), \fBtt_message_op\fP(3), \fBtt_free\fP(3)\&.
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:41
