'\" t
...\" SpinBox.sgm /main/14 1996/09/08 20:10:21 rws $
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "DtSpinBox" "library call"
.SH "NAME"
\fBDtSpinBox\fP \(em the SpinBox widget class
.SH "SYNOPSIS"
.PP
.nf
#include <Dt/SpinBox\&.h>
.fi
.SH "DESCRIPTION"
.PP
.RS
\fBNote:  
.PP
This widget has been superseded by the equivalent
Motif widget \fBXmSimpleSpinBox\fP\&. Please refer to the
\fIMotif Programmer\&'s Reference\fP for more information\&.
.RE
.PP
The DtSpinBox widget is a user interface control to increment and decrement
an arbitrary TextField\&. For example, it can be used to cycle through the months
of the year or days of the month\&.
.PP
Widget subclassing is not supported for the DtSpinBox widget class\&.
.SS "Classes"
.PP
The DtSpinBox widget inherits behavior and resources from the \fBCore\fP, \fBComposite\fP and \fBXmManager\fP classes\&.
.PP
The class pointer is \fBdtSpinBoxWidgetClass\fP\&.
.PP
The class name is \fBDtSpinBoxWidget\fR\&.
.SS "New Resources"
.PP
The following table defines a set of widget resources used by the application
to specify data\&. The application can also set the resource values for the
inherited classes to set attributes for this widget\&. To reference a resource
by name or by class in a \fB\&.Xdefaults\fP file, the application
must remove the \fBDtN\fP or \fBDtC\fP prefix and
use the remaining letters\&. To specify one of the defined values for a resource
in a \fB\&.Xdefaults\fP file, the application must remove the \fBDt\fP prefix and use the remaining letters (in either lower case or
upper case, but including any underscores between words)\&. The codes in the
access column indicate if the given resource can be set at creation time (C),
set by using \fBXtSetValues\fP (S), retrieved by using \fBXtGetValues\fP (G), or is not applicable (N/A)\&.
.TS
tab();
lw(1.760313i) lw(1.455192i) lw(0.672831i) lw(0.837127i) lw(0.774538i).
\fBDtSpinBox Resource
Set\fP
\fBName\fP\fBClass\fP\fBType\fP\fBDefault\fP\fBAccess\fP
\fBDtNarrowLayout\fP\fBDtCArrowLayout\fP\fBunsigned char\fRDtARROWS_ENDCSG
\fBDtNarrowSensitivity\fP\fBDtCArrowSensitivity\fP\fBunsigned char\fRDtARROWS-_SENSITIVECSG
\fBDtNdecimalPoints\fP\fBDtCDecimalPoints\fP\fBshort\fR0CSG
\fBDtNincrementValue\fP\fBDtCIncrementValue\fP\fBint\fR1CSG
\fBDtNinitialDelay\fP\fBDtCInitialDelay\fP\fBunsigned int\fR250CSG
\fBDtNmaximumValue\fP\fBDtCMaximumValue\fP\fBint\fR10CSG
\fBDtNminimumValue\fP\fBDtCMinimumValue\fP\fBint\fR0CSG
\fBDtNmodifyVerifyCallback\fP\fBDtCCallback\fP\fBXtCallbackList\fRNULLC
\fBDtNnumValues\fP\fBDtCNumValues\fP\fBint\fR0CSG
\fBDtNposition\fP\fBDtCPosition\fP\fBint\fR0CSG
\fBDtNrepeatDelay\fP\fBDtCRepeatDelay\fP\fBunsigned int\fR200CSG
\fBDtNspinBoxChildType\fP\fBDtCSpinBoxChildType\fP\fBunsigned char\fRXmSTRINGCG
\fBDtNvalueChangedCallback\fP\fBDtCCallback\fP\fBXtCallbackList\fRNULLC
\fBDtNvalues\fP\fBDtCValues\fP\fBXmStringTable\fRNULLCSG
.TE
.IP "\fBDtNarrowLayout\fP" 10
Specifies the style and position of the SpinBox arrows\&. The following
values are supported:
.RS
.IP "DtARROWS_FLAT_BEGINNING" 10
The arrows are placed side by side to the right of the TextField\&.
.IP "DtARROWS_FLAT_END" 10
The arrows are placed side by side to the left of the TextField\&.
.IP "DtARROWS_SPLIT" 10
The down arrow is on the left and the up arrow is on the right of the
TextField\&.
.IP "DtARROWS_BEGINNING" 10
The arrows are stacked and placed on the left of the TextField\&.
.IP "DtARROWS_END" 10
The arrows are stacked and placed on the right of the TextField\&.
.RE
.IP "\fBDtNarrowSensitivity\fP" 10
Specifies the sensitivity of the arrows in the DtSpinBox\&. The following
values are supported:
.RS
.IP "DtARROWS_SENSITIVE" 10
Both arrows are active to user selection\&.
.IP "DtARROWS_DECREMENT_SENSITIVE" 10
The down arrow is active and the up arrow is inactive to user selection\&.
.IP "DtARROWS_INCREMENT_SENSITIVE" 10
The up arrow is active and the down arrow is inactive to user selection\&.
.IP "DtARROWS_INSENSITIVE" 10
Both arrows are inactive to user selection\&.
.RE
.IP "\fBDtNdecimalPoints\fP" 10
Specifies the position of the radix character within the numeric value
when \fBDtNspinBoxChildType\fP is \fBDtNUMERIC\fP\&. This resource is used to allow for
floating point values in the DtSpinBox widget\&.
.IP "\fBDtNincrementValue\fP" 10
Specifies the amount to increment or decrement the \fBDtNposition\fP when the \fBDtNspinBoxChildType\fP is \fBDtNUMERIC\fP\&. When
the Up action is activated, the \fBDtNincrementValue\fP is added to the \fBDtNposition\fP
value; when the Down action is activated, the \fBDtNincrementValue\fP is subtracted from the \fBDtNposition\fP value\&. When \fBDtNspinBoxChildType\fP is \fBDtSTRING\fP, this
resource is ignored\&.
.IP "\fBDtNinitialDelay\fP" 10
Specifies the amount of time in milliseconds before the Arrow buttons
will begin to spin continuously\&.
.IP "\fBDtNnumValues\fP" 10
Specifies the number of items in the \fBDtNvalues\fP list when the \fBDtNspinBoxChildType\fP resource is \fBDtSTRING\fP\&.
The value of this resource must be a positive integer\&. The \fBDtNnumValues\fP is maintained by the DtSpinBox widget when items
are added or deleted from the \fBDtNvalues\fP
list\&. When \fBDtNspinBoxChildType\fP is
not \fBDtSTRING\fP, this resource is ignored\&.
.IP "\fBDtNvalues\fP" 10
Supplies the list of strings to cycle through when the \fBDtNspinButtonChildType\fP resource is \fBDtSTRING\fP\&.
When \fBDtNspinBoxChildType\fP is not \fBDtSTRING\fP, this resource is ignored\&.
.IP "\fBDtNmaximumValue\fP" 10
Specifies the upper bound on the DtSpinBox\&'s range when \fBDtNspinBoxChildType\fP is \fBDtNUMERIC\fP\&.
.IP "\fBDtNminimumValue\fP" 10
Specifies the lower bound on the DtSpinBox\&'s range when \fBDtNspinBoxChildType\fP is \fBDtNUMERIC\fP\&.
.IP "\fBDtNmodifyVerifyCallback\fP" 10
Specifies the callback to be invoked just before the DtSpinBox position
changes\&. The application can use this callback to implement new application-related
logic (including setting new position spinning to, or canceling the impending
action)\&. For example, this callback can be used to stop the spinning just
before wrapping at the upper and lower position boundaries\&. If the application
sets the \fIdoit\fP member of the \fBDtSpinBoxCallbackStruct\fR to False, nothing happens\&. Otherwise,
the position changes\&. Reasons sent by the callback are \fBDtCR_SPIN_NEXT\fP, or \fBDtCR_SPIN_PRIOR\fP\&.
.IP "\fBDtNposition\fP" 10
The \fBDtNposition\fP resource has
a different value based on the \fBDtNspinBoxChildType\fP resource\&. When \fBDtNspinBoxChildType\fP is \fBDtSTRING\fP, the \fBDtNposition\fP is the index into the \fBDtNvalues\fP list for the current item\&. When the \fBDtNspinBoxChildType\fP resource is \fBDtNUMERIC\fP, the \fBDtNposition\fP is the integer value of the DtSpinBox that falls
within the range of \fBDtNmaximumValue\fP
and \fBDtNminimumValue\fP\&.
.IP "\fBDtNrepeatDelay\fP" 10
Specifies the number of milliseconds between repeated calls to the \fBDtNvalueChangedCallback\fP while the user is spinning
the DtSpinBox\&.
.IP "\fBDtNspinBoxChildType\fP" 10
Specifies the style of the DtSpinBox\&. The following values are supported:
.RS
.IP "DtSTRING" 10
The child is a string value that is specified through the \fBDtNvalues\fP resource and incremented and decremented
by changing the \fBDtNposition\fP resource\&.
.IP "DtNUMERIC" 10
The child is a numeric value that is specified through the \fBDtNposition\fP resource and incremented according
to the \fBDtNincrementValue\fP resource\&.
.RE
.IP "\fBDtNvalueChangedCallback\fP" 10
Specifies the callback to be invoked whenever the value of the \fBDtNposition\fP resource is changed through the
use of the spinner arrows\&. The \fBDtNvalueChangedCallback\fP passes the \fBDtSpinBoxCallbackStruct\fR \fIcall_data\fP structure\&.
.SS "Inherited Resources"
.PP
The DtSpinBox widget inherits behavior and resources from the following
named superclasses\&. For a complete description of each resource, see the man page
for that superclass\&.
.TS
tab();
lw(1.573795i) lw(1.565512i) lw(0.894578i) lw(0.712349i) lw(0.753765i).
\fBXmManager Resource
Set\fP
\fBName\fP\fBClass\fP\fBType\fP\fBDefault\fP\fBAccess\fP
\fBXmNbottomShadowColor\fP\fBXmCBottomShadowColor\fP\fBPixel\fRdynamicCSG
\fBXmNbottomShadowPixmap\fP\fBXmCBottomShadowPixmap\fP\fBPixmap\fR\fBXmUNSPECIFIED_PIXMAP\fPCSG
\fBXmNforeground\fP\fBXmCForeground\fP\fBPixel\fRdynamicCSG
\fBXmNhelpCallback\fP\fBXmCCallback\fP\fBXtCallbackList\fRNULLC
\fBXmNhighlightColor\fP\fBXmCHighlightColor\fP\fBPixel\fRdynamicCSG
\fBXmNhighlightPixmap\fP\fBXmCHighlightPixmap\fP\fBPixmap\fRdynamicCSG
\fBXmNinitialFocus\fP\fBXmCInitialFocus\fP\fBWidget\fRNULLCSG
\fBXmNnavigationType\fP\fBXmCNavigationType\fP\fBXmNavigationType\fRdynamicCSG
\fBXmNshadowThickness\fP\fBXmCShadowThickness\fP\fBDimension\fRdynamicCSG
\fBXmNstringDirection\fP\fBXmCStringDirection\fP\fBXmStringDirection\fRdynamicCG
\fBXmNtopShadowColor\fP\fBXmCTopShadowColor\fP\fBPixel\fRdynamicCSG
\fBXmNtopShadowPixmap\fP\fBXmCTopShadowPixmap\fP\fBPixmap\fRdynamicCSG
\fBXmNtraversalOn\fP\fBXmCTraversalOn\fP\fBBoolean\fRdynamicCSG
\fBXmNunitType\fP\fBXmCUnitType\fP\fBunsigned char\fRdynamicCSG
\fBXmNuserData\fP\fBXmCUserData\fP\fBXtPointer\fRNULLCSG
.TE
.TS
tab();
lw(1.563813i) lw(1.581583i) lw(0.701939i) lw(0.879645i) lw(0.773021i).
\fBComposite Resource
Set\fP
\fBName\fP\fBClass\fP\fBType\fP\fBDefault\fP\fBAccess\fP
\fBXmNchildren\fP\fBXmCReadOnly\fP\fBWidgetList\fRNULLG
\fBXmNinsertPosition\fP\fBXmCInsertPosition\fP\fBXtOrderProc\fRdefault procedureCSG
\fBXmNnumChildren\fP\fBXmCReadOnly\fP\fBCardinal\fR0G
.TE
.TS
tab();
lw(1.595729i) lw(1.571429i) lw(0.761414i) lw(0.704713i) lw(0.866716i).
\fBCore Resource Set\fP
\fBName\fP\fBClass\fP\fBType\fP\fBDefault\fP\fBAccess\fP
\fBXmNaccelerators\fP\fBXmCAccelerators\fP\fBXtAccelerators\fRdynamicCSG
\fBXmNancestorSensitive\fP\fBXmCSensitive\fP\fBBoolean\fRdynamicG
\fBXmNbackground\fP\fBXmCBackground\fP\fBPixel\fRdynamicCSG
\fBXmNbackgroundPixmap\fP\fBXmCPixmap\fP\fBPixmap\fR\fBXmUNSPECIFIED_PIXMAP\fPCSG
\fBXmNborderColor\fP\fBXmCBorderColor\fP\fBPixel\fRXtDefaultForegroundCSG
\fBXmNborderPixmap\fP\fBXmCPixmap\fP\fBPixmap\fR\fBXmUNSPECIFIED_PIXMAP\fPCSG
\fBXmNborderWidth\fP\fBXmCBorderWidth\fP\fBDimension\fR0CSG
\fBXmNcolormap\fP\fBXmCColormap\fP\fBColormap\fRdynamicCG
\fBXmNdepth\fP\fBXmCDepth\fP\fBint\fRdynamicCG
\fBXmNdestroyCallback\fP\fBXmCCallback\fP\fBXtCallbackList\fRNULLC
\fBXmNheight\fP\fBXmCHeight\fP\fBDimension\fRdynamicCSG
\fBXmNinitialResourcesPersistent\fP\fBXmCInitialResourcesPersistent\fP\fBBoolean\fRTrueC
\fBXmNmappedWhenManaged\fP\fBXmCMappedWhenManaged\fP\fBBoolean\fRTrueCSG
\fBXmNscreen\fP\fBXmCScreen\fP\fBScreen *\fRdynamicCG
\fBXmNsensitive\fP\fBXmCSensitive\fP\fBBoolean\fRTrueCSG
\fBXmNtranslations\fP\fBXmCTranslations\fP\fBXtTranslations\fRdynamicCSG
\fBXmNwidth\fP\fBXmCWidth\fP\fBDimension\fRdynamicCSG
\fBXmNx\fP\fBXmCPosition\fP\fBPosition\fR0CSG
\fBXmNy\fP\fBXmCPosition\fP\fBPosition\fR0CSG
.TE
.SS "Callback Information"
.PP
A pointer to the following structure is passed to each DtSpinBox callback:
.PP
.nf
\f(CWtypedef struct {
        int             \fIreason\fP;
        XEvent          *\fIevent\fP;
        Widget          \fIwidget\fP;
        Boolean \fIdoit\fP;
        int             \fIposition\fP;
        XmString        \fIvalue\fP;
        Boolean \fIcrossed_boundary\fP;
} DtSpinBoxCallbackStruct;\fR
.fi
.PP
.PP
The \fIreason\fP argument indicates why the
callback was invoked\&. There are three possible reasons for this callback to
be issued\&. The reason is \fBDtCR_OK\fP
when this is the first call to the callback at the beginning of a spin or
if it is a single activation of the spin arrows\&. If the DtSpinBox is in the
process of being continuously spun, then the reason will be \fBDtCR_SPIN_NEXT\fP or \fBDtCR_SPIN_PRIOR\fP, depending on the arrow that is spinning\&.
.PP
The \fIevent\fP argument points to the \fBXEvent\fR that triggered the callback\&. It can be \fBNULL\fP when the DtSpinBox is continuously spinning\&.
.PP
The \fIwidget\fP argument is the widget identifier
for the text widget that has been affected by the spin\&.
.PP
The \fIdoit\fP argument is set only when
the \fIcall_data\fP comes from the \fBDtNmodifyVerifyCallback\fP\&. It indicates that the
action that caused the callback to be called should be performed\&. The action
is not performed if \fIdoit\fP is set to False\&.
.PP
The \fIposition\fP argument is the new value
of the \fBDtNposition\fP resource as a
result of the spin\&.
.PP
The \fIvalue\fP argument is the new \fBXmString\fR value displayed in the Text widget as
a result of the spin\&. The application must copy this string if it is used
beyond the scope of the \fIcall_data\fP structure\&.
.PP
The \fIcrossed_boundary\fP argument is True
when the spinbox cycles\&. This is the case when a \fBDtNspinBoxChildType\fP of \fBDtSTRING\fP wraps from the first item to the last or the last item to the
first\&. In the case of the \fBDtNspinBoxChildType\fP of \fBDtNUMERIC\fP, the
boundary is crossed when the DtSpinBox cycles from the maximum value to the
minimum or vice versa\&.
.SH "SEE ALSO"
.PP
\fBDtCreateSpinBox\fP(3), \fBDtSpinBoxAddItem\fP(3), \fBDtSpinBoxDeletePos\fP(3), \fBDtSpinBoxSetItem\fP(3), \fBComposite\fP(3), \fBCore\fP(3), \fBXmManager\fP(3), \fBXmText\fP(3), \fBXmTextField\fP(3), \fBXtGetValues\fP(3), \fBXtSetValues\fP(3) 
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:40
