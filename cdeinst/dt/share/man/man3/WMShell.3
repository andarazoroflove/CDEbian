'\" t
...\" WMShell.sgm /main/10 1996/09/08 21:43:23 rws $
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "WMShell" "library call"
.SH "NAME"
\fBWMShell\fP \(em The WMShell widget class
.iX "WMShell"
.iX "widget class" "WMShell"
.SH "SYNOPSIS"
.PP
.nf
#include <Xm/Xm\&.h>
#include <X11/Shell\&.h>
.fi
.SH "DESCRIPTION"
.PP
WMShell is a top-level widget that encapsulates the interaction with the
window manager\&.
.SS "Classes"
.PP
WMShell inherits behavior and resources from the \fBCore\fP, \fBComposite\fP,
and \fBShell\fP classes\&.
.PP
The class pointer is \fBwmShellWidgetClass\fP\&.
.PP
The class name is \fBWMShell\fP\&.
.SS "New Resources"
.PP
The following table defines a set of widget resources used by the programmer
to specify data\&. The programmer can also set the resource values for the
inherited classes to set attributes for this widget\&. To reference a
resource by name or by class in a \fB\&.Xdefaults\fP file, remove the \fBXmN\fP or
\fBXmC\fP prefix and use the remaining letters\&. To specify one of the defined
values for a resource in a \fB\&.Xdefaults\fP file, remove the \fBXm\fP prefix and use
the remaining letters (in either lowercase or uppercase, but include any
underscores between words)\&.
The codes in the access column indicate if the given resource can be
set at creation time (C),
set by using \fBXtSetValues\fP (S),
retrieved by using \fBXtGetValues\fP (G), or is not applicable (N/A)\&.
.PP
.TS
tab() box;
c s s s s
l| l| l| l| l.
\fBWMShell Resource Set\fP
\fBName\fP\fBClass\fP\fBType\fP\fBDefault\fP\fBAccess\fP
_____
XmNbaseHeightXmCBaseHeightintXtUnspecifiedShellIntCSG
_____
XmNbaseWidthXmCBaseWidthintXtUnspecifiedShellIntCSG
_____
XmNheightIncXmCHeightIncintXtUnspecifiedShellIntCSG
_____
XmNiconMaskXmCIconMaskPixmapNULLCSG
_____
XmNiconPixmapXmCIconPixmapPixmapNULLCSG
_____
XmNiconWindowXmCIconWindowWindowNULLCSG
_____
XmNiconXXmCIconXintXtUnspecifiedShellIntCSG
_____
XmNiconYXmCIconYintXtUnspecifiedShellIntCSG
_____
XmNinitialStateXmCInitialStateintNormalStateCSG
_____
XmNinputXmCInputBooleanFalseCSG
_____
XmNmaxAspectXXmCMaxAspectXintXtUnspecifiedShellIntCSG
_____
XmNmaxAspectYXmCMaxAspectYintXtUnspecifiedShellIntCSG
_____
XmNmaxHeightXmCMaxHeightintXtUnspecifiedShellIntCSG
_____
XmNmaxWidthXmCMaxWidthintXtUnspecifiedShellIntCSG
_____
XmNminAspectXXmCMinAspectXintXtUnspecifiedShellIntCSG
_____
XmNminAspectYXmCMinAspectYintXtUnspecifiedShellIntCSG
_____
XmNminHeightXmCMinHeightintXtUnspecifiedShellIntCSG
_____
XmNminWidthXmCMinWidthintXtUnspecifiedShellIntCSG
_____
XmNtitleXmCTitleStringdynamicCSG
_____
XmNtitleEncodingXmCTitleEncodingAtomdynamicCSG
_____
XmNtransientXmCTransientBooleanFalseCSG
_____
XmNwaitForWmXmCWaitForWmBooleanTrueCSG
_____
XmNwidthIncXmCWidthIncintXtUnspecifiedShellIntCSG
_____
XmNwindowGroupXmCWindowGroupWindowdynamicCSG
_____
XmNwinGravityXmCWinGravityintdynamicCSG
_____
XmNwmTimeoutXmCWmTimeoutint5000 msCSG
_____
.TE
.IP "\fBXmNbaseHeight\fP" 10
Specifies the base for a progression of preferred heights for the
window manager to use in sizing the widget\&.
The preferred heights are \fBXmNbaseHeight\fP plus integral multiples of
\fBXmNheightInc\fP, with a minimum of \fBXmNminHeight\fP and a maximum
of \fBXmNmaxHeight\fP\&.
If an initial value is not supplied for \fBXmNbaseHeight\fP but is
supplied for \fBXmNbaseWidth\fP, the value of \fBXmNbaseHeight\fP
is set to 0 (zero) when the widget is realized\&.
.IP "\fBXmNbaseWidth\fP" 10
Specifies the base for a progression of preferred widths for the
window manager to use in sizing the widget\&.
The preferred widths are \fBXmNbaseWidth\fP plus integral multiples of
\fBXmNwidthInc\fP, with a minimum of \fBXmNminWidth\fP and a maximum of
\fBXmNmaxWidth\fP\&.
If an initial value is not supplied for \fBXmNbaseWidth\fP but is
supplied for \fBXmNbaseHeight\fP, the value of \fBXmNbaseWidth\fP
is set to 0 (zero) when the widget is realized\&.
.IP "\fBXmNheightInc\fP" 10
Specifies the increment for a progression of preferred heights for the
window manager to use in sizing the widget\&.
The preferred heights are \fBXmNbaseHeight\fP plus integral multiples of
\fBXmNheightInc\fP, with a minimum of \fBXmNminHeight\fP and a maximum
of \fBXmNmaxHeight\fP\&.
If an initial value is not supplied for \fBXmNheightInc\fP but is
supplied for \fBXmNwidthInc\fP, the value of \fBXmNheightInc\fP
is set to 1 when the widget is realized\&.
.IP "\fBXmNiconMask\fP" 10
Specifies a bitmap that could be used by the window manager to clip the
\fBXmNiconPixmap\fP bitmap to make the icon nonrectangular\&.
.IP "\fBXmNiconPixmap\fP" 10
Specifies a bitmap that could be used by the window manager as the
application\&'s icon\&.
.IP "\fBXmNiconWindow\fP" 10
Specifies the ID of a window that could be used by the window manager
as the application\&'s icon\&.
.IP "\fBXmNiconX\fP" 10
Specifies a suitable place to put the application\&'s icon; this is a hint
to the window manager in root window coordinates\&. Because the window manager
controls icon placement policy, this resource may be ignored\&.
.IP "\fBXmNiconY\fP" 10
Specifies a suitable place to put the application\&'s icon; this is a hint
to the window manager in root window coordinates\&.
Because the window manager
controls icon placement policy, this resource may be ignored\&.
.IP "\fBXmNinitialState\fP" 10
Specifies the state the application wants the widget instance to
start in\&.
It must be one of the constants \fBNormalState\fP or \fBIconicState\fP\&.
.IP "\fBXmNinput\fP" 10
Specifies the application\&'s input model for this widget and its
descendants\&.
The meaning of a True or False value for this resource depends on the
presence or absence of a WM_TAKE_FOCUS atom in the
WM_PROTOCOLS property:
.TS
tab() box;
l| l| l.
\fBInput Model\fP\fBXmNinput\fP\fBWM_TAKE_FOCUS\fP
___
No inputFalseAbsent
___
PassiveTrueAbsent
___
Locally activeTruePresent
___
Globally activeFalsePresent
___
.TE
.IP "" 10
For more information on input models, see the X Consortium Standard
\fIInter-Client Communication Conventions Manual\fP (ICCCM)\&.
.IP "\fBXmNmaxAspectX\fP" 10
Specifies the numerator of the maximum aspect ratio (X/Y) that the
application wants the widget instance to have\&.
.IP "\fBXmNmaxAspectY\fP" 10
Specifies the denominator of the maximum aspect ratio (X/Y) that the
application wants the widget instance to have\&.
.IP "\fBXmNmaxHeight\fP" 10
Specifies the maximum height that the application wants the widget
instance to have\&.
.IP "\fBXmNmaxWidth\fP" 10
Specifies the maximum width that the application wants the widget
instance to have\&.
.IP "\fBXmNminAspectX\fP" 10
Specifies the numerator of the minimum aspect ratio (X/Y) that the
application wants the widget instance to have\&.
.IP "\fBXmNminAspectY\fP" 10
Specifies the denominator of the minimum aspect ratio (X/Y) that the
application wants the widget instance to have\&.
.IP "\fBXmNminHeight\fP" 10
Specifies the minimum height that the application wants the widget
instance to have\&.
.IP "\fBXmNminWidth\fP" 10
Specifies the minimum width that the application wants the widget
instance to have\&.
.IP "\fBXmNtitle\fP" 10
Specifies the application name to be displayed by the window manager\&.
The default is the icon name, if specified; otherwise, it is the name of the
application\&.
When \fBXtGetValues\fP is called on this resource, the returned value
is a pointer to the actual resource value and
should not be freed\&.
.IP "\fBXmNtitleEncoding\fP" 10
Specifies a property type that represents the encoding of the
\fBXmNtitle\fP string\&.
If a language procedure has been set, the default is None; otherwise,
the default is \fBXA_STRING\fP\&. When the widget is realized, if the value
is None, the corresponding name is assumed to be in the current locale\&.
The name is passed to \fBXmbTextListToTextProperty\fP with an encoding
style of \fBXStdICCTextStyle\fP\&. The resulting encoding is \fBSTRING\fP
if the name is fully convertible to \fBSTRING\fP; otherwise it is
\fBCOMPOUND_TEXT\fP\&.
The values of the encoding resources are not changed; they remain None\&.
.IP "\fBXmNtransient\fP" 10
Specifies a Boolean value that is True if the widget instance is
transient, typically a popup on behalf of another widget\&.
The window manager may treat a transient widget\&'s window differently
from other windows\&.
For example, a window manager may
not iconify a transient window
separately from its associated application\&.
Applications and users should not normally alter this resource\&.
.IP "\fBXmNwaitForWm\fP" 10
When True, specifies that the Intrinsics waits the length of time given
by the \fBXmNwmTimeout\fP resource for the window manager to respond to
certain actions before assuming that there is no window manager present\&.
This resource is altered by the Intrinsics as it receives, or fails
to receive, responses from the window manager\&.
.IP "\fBXmNwidthInc\fP" 10
Specifies the base for a progression of preferred widths for the
window manager to use in sizing the widget\&.
The preferred widths are \fBXmNbaseWidth\fP plus integral multiples of
\fBXmNwidthInc\fP, with a minimum of \fBXmNminWidth\fP and a maximum of
\fBXmNmaxWidth\fP\&.
If an initial value is not supplied for \fBXmNwidthInc\fP but is
supplied for \fBXmNheightInc\fP, the value of \fBXmNwidthInc\fP
is set to 1 when the widget is realized\&.
.IP "\fBXmNwindowGroup\fP" 10
Specifies the ID of a window with which this widget instance is
associated\&.
By convention, this window is the "leader" of a group of windows\&.
A window manager may treat all windows in a group in some way; for
example, it may always move or iconify them together\&.
.IP "" 10
If no initial value is specified, the value is set to the window of the
first realized ancestor widget in the parent hierarchy when the widget
is realized\&.
If a value of \fBXtUnspecifiedWindowGroup\fP is specified, no window
group is set\&.
.IP "\fBXmNwinGravity\fP" 10
Specifies the window gravity for use by the window manager in
positioning the widget\&.
If no initial value is specified, the value is set when the widget is
realized\&.
If \fBXmNgeometry\fP is not NULL, \fBXmNwinGravity\fP is set to the
window gravity returned by \fBXWMGeometry\fP\&.
Otherwise, \fBXmNwinGravity\fP is set to \fBNorthWestGravity\fP\&.
.IP "\fBXmNwmTimeout\fP" 10
Specifies the length of time that the Intrinsics waits for the window
manager to respond to certain actions before assuming that there is no
window manager present\&.
The value is in milliseconds and must not be negative\&.
.SS "Inherited Resources"
.PP
WMShell inherits behavior and resources from the
superclasses described in the following tables\&.
For a complete description of each resource, refer to the
reference page for that superclass\&.
.PP
.TS
tab() box;
c s s s s
l| l| l| l| l.
\fBShell Resource Set\fP
\fBName\fP\fBClass\fP\fBType\fP\fBDefault\fP\fBAccess\fP
_____
XmNallowShellResizeXmCAllowShellResizeBooleanFalseCG
_____
XmNcreatePopupChildProcXmCCreatePopupChildProcXtCreatePopupChildProcNULLCSG
_____
XmNgeometryXmCGeometryStringNULLCSG
_____
XmNoverrideRedirectXmCOverrideRedirectBooleanFalseCSG
_____
XmNpopdownCallbackXmCCallbackXtCallbackListNULLC
_____
XmNpopupCallbackXmCCallbackXtCallbackListNULLC
_____
XmNsaveUnderXmCSaveUnderBooleanFalseCSG
_____
XmNvisualXmCVisualVisual *CopyFromParentCSG
_____
.TE
.PP
.TS
tab() box;
c s s s s
l| l| l| l| l.
\fBComposite Resource Set\fP
\fBName\fP\fBClass\fP\fBType\fP\fBDefault\fP\fBAccess\fP
_____
XmNchildrenXmCReadOnlyWidgetListNULLG
_____
XmNinsertPositionXmCInsertPositionXtOrderProcNULLCSG
_____
XmNnumChildrenXmCReadOnlyCardinal0G
_____
.TE
.PP
.TS
tab() box;
c s s s s
l| l| l| l| l.
\fBCore Resource Set\fP
\fBName\fP\fBClass\fP\fBType\fP\fBDefault\fP\fBAccess\fP
_____
XmNacceleratorsXmCAcceleratorsXtAcceleratorsdynamicCSG
_____
XmNancestorSensitiveXmCSensitiveBooleandynamicG
_____
XmNbackgroundXmCBackgroundPixeldynamicCSG
_____
XmNbackgroundPixmapXmCPixmapPixmapXmUNSPECIFIED_PIXMAPCSG
_____
XmNborderColorXmCBorderColorPixelXtDefaultForegroundCSG
_____
XmNborderPixmapXmCPixmapPixmapXmUNSPECIFIED_PIXMAPCSG
_____
XmNborderWidthXmCBorderWidthDimension0CSG
_____
XmNcolormapXmCColormapColormapdynamicCG
_____
XmNdepthXmCDepthintdynamicCG
_____
XmNdestroyCallbackXmCCallbackXtCallbackListNULLC
_____
XmNheightXmCHeightDimensiondynamicCSG
_____
XmNinitialResourcesPersistentXmCInitialResourcesPersistentBooleanTrueC
_____
XmNmappedWhenManagedXmCMappedWhenManagedBooleanTrueCSG
_____
XmNscreenXmCScreenScreen *dynamicCG
_____
XmNsensitiveXmCSensitiveBooleanTrueCSG
_____
XmNtranslationsXmCTranslationsXtTranslationsdynamicCSG
_____
XmNwidthXmCWidthDimensiondynamicCSG
_____
XmNxXmCPositionPosition0CSG
_____
XmNyXmCPositionPosition0CSG
_____
.TE
.SS "Translations"
.PP
There are no translations for WMShell\&.
.SH "RELATED"
.PP
\fBComposite\fP(3), \fBCore\fP(3), and \fBShell\fP(3)\&.
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:41
