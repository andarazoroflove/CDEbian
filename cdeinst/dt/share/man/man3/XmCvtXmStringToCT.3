'\" t
...\" CvtXmStC.sgm /main/8 1996/08/31 15:21:54 rws $
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "XmCvtXmStringToCT" "library call"
.SH "NAME"
\fBXmCvtXmStringToCT\fP \(em A compound string function that converts a compound string to compound text
.iX "XmCvtXmStringToCT"
.iX "compound string functions" "XmCvtXmStringToCT"
.SH "SYNOPSIS"
.PP
.nf
#include <Xm/Xm\&.h>
\fBchar * \fBXmCvtXmStringToCT\fP\fR(
\fBXmString \fBstring\fR\fR);
.fi
.SH "DESCRIPTION"
.PP
\fBXmCvtXmStringToCT\fP converts a compound string to a (\fBchar *\fR) string
in compound text format\&.
The application must call \fBXtAppInitialize\fP before calling this
function\&.
The converter uses the font list tag associated with a given compound
string segment to select a compound text format for that segment\&.
A registry defines a mapping between font list tags and compound text
encoding formats\&.
The converter uses the following algorithm for each compound string
segment:
.IP "   1." 6
If the compound string segment tag is mapped to
\fBXmFONTLIST_DEFAULT_TAG\fP in the registry, the converter passes the
text of the compound string segment to \fBXmbTextListToTextProperty\fP
with an encoding style of \fBXCompoundTextStyle\fP and uses the
resulting compound text for that segment\&.
.IP "   2." 6
If the compound string segment tag is mapped to an MIT registered
charset in the registry, the converter creates the compound text for
that segment using the charset (from the registry) and the text of the
compound string segment as defined in the X Consortium Standard
\fICompound Text Encoding\fP\&.
.IP "   3." 6
If the compound string segment tag is mapped to a charset in the
registry that is neither \fBXmFONTLIST_DEFAULT_TAG\fP nor an MIT
registered charset, the converter creates the compound text for that
segment using the charset (from the registry) and the text of the
compound string segment as an "extended segment" with a variable number
of octets per character\&.
.IP "   4." 6
If the compound string segment tag is not mapped in the registry, the
result is implementation dependent\&.
.IP "\fIstring\fP" 10
Specifies a compound string to be converted to compound text\&.
.SH "RETURN"
.PP
Returns a (\fBchar *\fR) string in compound text format\&.
This format is described in the X Consortium Standard \fICompound Text
Encoding\fP\&.
The function allocates space to hold the returned string\&.
The application is responsible for managing the allocated space\&.
The application can recover the allocated space by calling \fBXtFree\fP\&.
.SH "RELATED"
.PP
\fBXmCvtCTToXmString\fP(3),
\fBXmFontList\fP(3),
\fBXmMapSegmentEncoding\fP(3),
\fBXmRegisterSegmentEncoding\fP(3), and
\fBXmString\fR\&.
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:41
