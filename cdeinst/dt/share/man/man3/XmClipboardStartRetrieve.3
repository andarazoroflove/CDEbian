'\" t
...\" ClipbN.sgm /main/10 1996/09/25 10:25:13 cdedoc $
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "XmClipboardStartRetrieve" "library call"
.SH "NAME"
\fBXmClipboardStartRetrieve\fP \(em A clipboard function that prepares
to retrieve data from the clipboard
.iX "XmClipboardStartRetrieve"
.iX "clipboard functions" "XmClipboardStartRetrieve"
.SH "SYNOPSIS"
.PP
.nf
#include <Xm/CutPaste\&.h>
int XmClipboardStartRetrieve (\fIdisplay, window, timestamp\fP)
        Display \fI* display\fP;
        Window  \fIwindow\fP;
        Time    \fItimestamp\fP;
\fB\fR(\fBvoid\fR)
.fi
.SH "DESCRIPTION"
.PP
\fBXmClipboardStartRetrieve\fP
tells the clipboard routines that the application is
ready to start copying an item from the clipboard\&.
The clipboard is locked by this routine and stays locked until
\fBXmClipboardEndRetrieve\fP is called\&. Between a call to
\fBXmClipboardStartRetrieve\fP and a call to
\fBXmClipboardEndRetrieve\fP, multiple calls to
\fBXmClipboardRetrieve\fP with the same format name result in data
being incrementally copied from the clipboard until the data in that
format has all been retrieved\&.
.PP
A return value of \fBXmClipboardTruncate\fP from calls to
\fBXmClipboardRetrieve\fP indicates that more data remains to be
copied in the given format\&.
It is recommended that any calls to the \fBInquire\fP functions that
the application needs to make to complete the copy from the clipboard
be made between the call to \fBXmClipboardStartRetrieve\fP and the
first call to \fBXmClipboardRetrieve\fP\&. This way, the application
does not need to call \fBXmClipboardLock\fP and
\fBXmClipboardUnlock\fP\&.
.IP "\fIdisplay\fP" 10
Specifies a pointer to the \fBDisplay\fR structure that was returned in a
previous call to \fBXOpenDisplay\fP or \fBXtDisplay\fP\&.
.IP "\fIwindow\fP" 10
Specifies the window ID of a widget that relates the application window to the
clipboard\&. The widget\&'s window ID can be obtained through
\fBXtWindow\fP\&.
The same application instance should pass the same window ID to each of the
clipboard functions that it calls\&.
.IP "\fItimestamp\fP" 10
Specifies the time of the event that triggered the copy\&.
A valid timestamp must be supplied; it is not sufficient to use
\fBCurrentTime\fP\&.
.SH "RETURN"
.IP "\fBXmClipboardSuccess\fP" 10
The function is successful\&.
.IP "\fBXmClipboardLocked\fP" 10
The function failed because the clipboard was locked by another
application\&. The application can continue to call the function again with
the same parameters until the lock goes away\&. This gives the application
the opportunity to ask if the user wants to keep trying or to give up
on the operation\&.
.SH "RELATED"
.PP
\fBXmClipboardEndRetrieve\fP(3),
\fBXmClipboardInquireCount\fP(3), \fBXmClipboardInquireFormat\fP(3),
\fBXmClipboardInquireLength\fP(3), \fBXmClipboardInquirePendingItems\fP(3),
\fBXmClipboardLock\fP(3),
\fBXmClipboardRetrieve\fP(3), \fBXmClipboardStartCopy\fP(3), and
\fBXmClipboardUnlock\fP(3)\&.
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:41
