'\" t
...\" f_notice.sgm /main/5 1996/08/30 14:28:02 rws $
...\" f_notice.sgm /main/5 1996/08/30 14:28:02 rws $-->
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "ttdt_file_notice" "library call"
.SH "NAME"
\fBttdt_file_notice\fP \(em create and send a standard ToolTalk notice about a file
.SH "SYNOPSIS"
.PP
.nf
#include <Tt/tttk\&.h>
\fBTt_message \fBttdt_file_notice\fP\fR(
\fBTt_message \fBcontext\fR\fR,
\fBTttk_op \fBop\fR\fR,
\fBTt_scope \fBscope\fR\fR,
\fBconst char *\fBpathname\fR\fR,
\fBint \fBsend_and_destroy\fR\fR);
.fi
.SH "DESCRIPTION"
.PP
The
\fBttdt_file_notice\fP function
is used to create (and optionally send) any of the standard file notices:
\fICreated\fP, \fIDeleted\fP, \fIMoved\fP, \fBReverted\fP, \fBSaved\fP, and
\fBModified\fP\&.
.PP
The
\fBttdt_file_notice\fP function
creates a notice with the specified
\fIop\fP and
\fIscope\fP, and sets its file attribute to
\fIpathname\fP\&. The function adds an unset argument of
\fBTt_mode\fR \fBTT_IN\fP and
vtype
\fIFile\fP to the notice, per the Desktop messaging conventions\&.
If
\fIsend_and_destroy\fP is True,
\fBttdt_file_notice\fP sends the message and then destroys it;
otherwise, it only creates the message\&.
.PP
The
\fIcontext\fP argument describes the environment to use\&.
If
\fIcontext\fP is not zero, messages created by
\fBttdt_file_notice\fP inherit from
\fIcontext\fP all contexts whose slotname begins with the characters
\fBENV_\fP\&.
.SH "RETURN VALUE"
.PP
If
\fIsend_and_destroy\fP is False, the
\fBttdt_file_notice\fP function returns the created
\fBTt_message\fR\&. If
\fIsend_and_destroy\fP is True, it returns zero;
otherwise, it returns an error pointer\&.
The application can use
\fBtt_ptr_error\fP(3) to extract one of the following
\fBTt_status\fR values from the returned handle:
.IP "TT_DESKTOP_EINVAL" 10
The
\fIop\fP argument was
\fBTTDT_MOVED\fP and
\fIsend_and_destroy\fP was True\&.
.IP "TT_ERR_DBAVAIL" 10
The ToolTalk service could not access the ToolTalk database
needed for this operation\&.
.IP "TT_ERR_DBEXIST" 10
The ToolTalk service could not access the specified ToolTalk database
in the expected place\&.
.IP "TT_ERR_NOMEM" 10
There is insufficient memory available to perform the function\&.
.IP "TT_ERR_NOMP" 10
The
\fBttsession\fP(1) process is not running and the ToolTalk service cannot restart it\&.
.IP "TT_ERR_OVERFLOW" 10
The ToolTalk service has more active messages than it can handle\&.
(The maximum number of active messages is
implementation specific, but is at least 2000\&.)
.IP "TT_ERR_POINTER" 10
The
\fIpathname\fP argument was
\fBNULL\fP or was a ToolTalk error pointer\&.
.IP "TT_ERR_PROCID" 10
The specified process identifier is out of date or invalid\&.
.SH "APPLICATION USAGE"
.PP
The
\fBttdt_file_event\fP function
is a higher-level interface than
\fBttdt_file_notice\fP, and is the preferred way to send all but the
\fIMoved\fP notice\&.
.SH "SEE ALSO"
.PP
\fBTt/tttk\&.h - Tttttk\fP(5), \fBttdt_file_event\fP(3)\&.
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:41
