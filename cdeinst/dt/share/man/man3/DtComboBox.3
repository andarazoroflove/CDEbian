'\" t
...\" ComboBox.sgm /main/16 1996/09/08 20:02:24 rws $
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "DtComboBox" "library call"
.SH "NAME"
\fBDtComboBox\fP \(em the ComboBox widget class
.SH "SYNOPSIS"
.PP
.nf
#include <Dt/ComboBox\&.h>
.fi
.SH "DESCRIPTION"
.PP
.RS
\fBNote:  
.PP
This function has been superseded by the equivalent
Motif function \fBXmComboBox\fP\&. Please refer to the
\fIMotif Programmer\&'s Reference\fP for more information\&.
.RE
.PP
The DtComboBox widget is a combination of a TextField and a List widget
that provides a list of valid choices for the TextField\&. Selecting an item
from this list automatically fills in the TextField with that list item\&.
.PP
Widget subclassing is not supported for the DtComboBox widget class\&.
.PP
The resources for the XmList and XmTextField widgets that are created
by the DtComboBox are accessible by using the \fBXtNameToWidget\fP(3)
function\&. The names of these widgets are \fB*List\fP and \fBText\fP, respectively\&. (The \fB*List\fP notation is required
because the List widget is not an immediate descendant of the DtComboBox\&.
See \fBXtNameToWidget\fP(3)\&.)
.SS "Classes"
.PP
The DtComboBox widget inherits behavior and resources from the \fBCore\fP, \fBComposite\fP and \fBXmManager\fP classes\&.
.PP
The class pointer is \fBdtComboBoxWidgetClass\fP\&.
.PP
The class name is \fBDtComboBoxWidget\fR\&.
.SS "New Resources"
.PP
The following table defines a set of widget resources used by the application
to specify data\&. The application can also set the resource values for the
inherited classes to set attributes for this widget\&. To reference a resource
by name or by class in a \fB\&.Xdefaults\fP file, the application
must remove the \fBDtN\fP or \fBDtC\fP prefix and
use the remaining letters\&. To specify one of the defined values for a resource
in a \fB\&.Xdefaults\fP file, the application must remove the \fBDt\fP prefix and use the remaining letters (in either lower case or
upper case, but including any underscores between words)\&. The codes in the
access column indicate if the given resource can be set at creation time (C),
set by using \fBXtSetValues\fP (S), retrieved by using \fBXtGetValues\fP (G), or is not applicable (N/A)\&.
.TS
tab();
lw(1.750000i) lw(1.723214i) lw(0.785714i) lw(0.687500i) lw(0.553571i).
\fBDtComboBox Resource
Set\fP
\fBName\fP\fBClass\fP\fBType\fP\fBDefault\fP\fBAccess\fP
\fBDtNmarginHeight\fP\fBDtCMarginHeight\fP\fBDimension\fR2CSG
\fBDtNmarginWidth\fP\fBDtCMarginWidth\fP\fBDimension\fR2CSG
\fBDtNselectedItem\fP\fBDtCSelectedItem\fP\fBXmString\fRdynamicCSG
\fBDtNselectedPosition\fP\fBDtCSelectedPosition\fP\fBint\fRdynamicCSG
\fBDtNselectionCallback\fP\fBDtCCallback\fP\fBXtCallbackList\fRNULLC
\fBDtNcomboBoxType\fP\fBDtCComboBoxType\fP\fBunsigned int\fRDtDROP_DOWN_LISTC
.TE
.IP "\fBDtNmarginHeight\fP" 10
Specifies the number of pixels added between the top and bottom of the
text widget and the start of the shadow\&.
.IP "\fBDtNmarginWidth\fP" 10
Specifies the number of pixels added between the right and left sides
of the text widget and the start of the shadow\&.
.IP "\fBDtNselectedItem\fP" 10
This resource is passed through to the XmList to set the \fBXmNselectedItemCount\fP and \fBXmNselectedItems\fP as the single item in the \fBXmNitems\fP that matches this specified \fBXmString\fR in the List\&. Setting both \fBDtNselectedItem\fP and \fBDtNselectedPosition\fP in the same argument list produces undefined behavior\&.
.IP "\fBDtNselectedPosition\fP" 10
This resource is passed through to the XmList to set the \fBXmNselectedItemCount\fP and \fBXmNselectedItems\fP as the single item at this specified position
in the List\&. Setting both \fBDtNselectedItem\fP
and \fBDtNselectedPosition\fP in the same
argument list produces undefined behavior\&.
.IP "\fBDtNselectionCallback\fP" 10
This callback list is issued when an item is selected from the DtComboBox
widget\&'s List\&. The \fIcall_data\fP structure contains
a \fBDtComboBoxCallbackStruct\fR with the
reason \fBDtCR_SELECT\fP\&.
.IP "\fBDtNcomboBoxType\fP" 10
This resource determines the style of the DtComboBox\&. There are two
choices:
.RS
.IP "DtDROP_DOWN_COMBO_BOX" 10
Provides an editable text area\&.
.IP "DtDROP_DOWN_LIST" 10
Provides a static text area\&.
.RE
.SS "Inherited Resources"
.PP
The DtComboBox widget inherits behavior and resources from the following
named superclasses\&. For a complete description of each resource, see the man page
for that superclass\&.
.TS
tab();
lw(1.568966i) lw(1.603448i) lw(0.939655i) lw(0.784483i) lw(0.603448i).
\fBXmManager  Resource
Set\fP
\fBName\fP\fBClass\fP\fBType\fP\fBDefault\fP\fBAccess\fP
\fBXmNbottomShadowColor\fP\fBXmCBottomShadowColor\fP\fBPixel\fRdynamicCSG
\fBXmNbottomShadowPixmap\fP\fBXmCBottomShadowPixmap\fP\fBPixmap\fR\fBXmUNSPECIFIED_PIXMAP\fPCSG
\fBXmNforeground\fP\fBXmCForeground\fP\fBPixel\fRdynamicCSG
\fBXmNhelpCallback\fP\fBXmCCallback\fP\fBXtCallbackList\fRNULLC
\fBXmNhighlightColor\fP\fBXmCHighlightColor\fP\fBPixel\fRdynamicCSG
\fBXmNhighlightPixmap\fP\fBXmCHighlightPixmap\fP\fBPixmap\fRdynamicCSG
\fBXmNinitialFocus\fP\fBXmCInitialFocus\fP\fBWidget\fRNULLCSG
\fBXmNnavigationType\fP\fBXmCNavigationType\fP\fBXmNavigationType\fRdynamicCSG
\fBXmNshadowThickness\fP\fBXmCShadowThickness\fP\fBDimension\fRdynamicCSG
\fBXmNstringDirection\fP\fBXmCStringDirection\fP\fBXmStringDirection\fRdynamicCG
\fBXmNtopShadowColor\fP\fBXmCTopShadowColor\fP\fBPixel\fRdynamicCSG
\fBXmNtopShadowPixmap\fP\fBXmCTopShadowPixmap\fP\fBPixmap\fRdynamicCSG
\fBXmNtraversalOn\fP\fBXmCTraversalOn\fP\fBBoolean\fRdynamicCSG
\fBXmNunitType\fP\fBXmCUnitType\fP\fBunsigned char\fRdynamicCSG
\fBXmNuserData\fP\fBXmCUserData\fP\fBXtPointer\fRNULLCSG
.TE
.TS
tab();
lw(1.571429i) lw(1.589286i) lw(0.803571i) lw(0.848214i) lw(0.687500i).
\fBComposite  Resource
Set\fP
\fBName\fP\fBClass\fP\fBType\fP\fBDefault\fP\fBAccess\fP
\fBXmNchildren\fP\fBXmCReadOnly\fP\fBWidgetList\fRNULLG
\fBXmNinsertPosition\fP\fBXmCInsertPosition\fP\fBXtOrderProc\fRdefault procedureCSG
\fBXmNnumChildren\fP\fBXmCReadOnly\fP\fBCardinal\fR0G
.TE
.TS
tab();
lw(1.663580i) lw(1.638117i) lw(0.763889i) lw(0.840278i) lw(0.594136i).
\fBCore Resource Set\fP
\fBName\fP\fBClass\fP\fBType\fP\fBDefault\fP\fBAccess\fP
\fBXmNaccelerators\fP\fBXmCAccelerators\fP\fBXtAccelerators\fRdynamicCSG
\fBXmNancestorSensitive\fP\fBXmCSensitive\fP\fBBoolean\fRdynamicG
\fBXmNbackground\fP\fBXmCBackground\fP\fBPixel\fRdynamicCSG
\fBXmNbackgroundPixmap\fP\fBXmCPixmap\fP\fBPixmap\fR\fBXmUNSPECIFIED_PIXMAP\fPCSG
\fBXmNborderColor\fP\fBXmCBorderColor\fP\fBPixel\fRXtDefaultForegroundCSG
\fBXmNborderPixmap\fP\fBXmCPixmap\fP\fBPixmap\fR\fBXmUNSPECIFIED_PIXMAP\fPCSG
\fBXmNborderWidth\fP\fBXmCBorderWidth\fP\fBDimension\fR0CSG
\fBXmNcolormap\fP\fBXmCColormap\fP\fBColormap\fRdynamicCG
\fBXmNdepth\fP\fBXmCDepth\fP\fBint\fRdynamicCG
\fBXmNdestroyCallback\fP\fBXmCCallback\fP\fBXtCallbackList\fRNULLC
\fBXmNheight\fP\fBXmCHeight\fP\fBDimension\fRdynamicCSG
\fBXmNinitialResourcesPersistent\fP\fBXmCInitialResourcesPersistent\fP\fBBoolean\fRTrueC
\fBXmNmappedWhenManaged\fP\fBXmCMappedWhenManaged\fP\fBBoolean\fRTrueCSG
\fBXmNscreen\fP\fBXmCScreen\fP\fBScreen *\fRdynamicCG
\fBXmNsensitive\fP\fBXmCSensitive\fP\fBBoolean\fRTrueCSG
\fBXmNtranslations\fP\fBXmCTranslations\fP\fBXtTranslations\fRdynamicCSG
\fBXmNwidth\fP\fBXmCWidth\fP\fBDimension\fRdynamicCSG
\fBXmNx\fP\fBXmCPosition\fP\fBPosition\fR0CSG
\fBXmNy\fP\fBXmCPosition\fP\fBPosition\fR0CSG
.TE
.SS "Callback Information"
.PP
A pointer to the following structure is passed to each DtComboBox callback:
.PP
.nf
\f(CWtypedef struct {
        int             \fIreason\fP;
        XEvent          *\fIevent\fP;
        XmString        \fIitem_or_text\fP;
        int             \fIitem_position\fP;
} DtComboBoxCallbackStruct;\fR
.fi
.PP
.PP
The \fIreason\fP argument indicates why the
callback was invoked; it is always \fBDtCR_SELECT\fP\&.
.PP
The \fIevent\fP argument points to the \fBXEvent\fR that triggered the callback, or \fBNULL\fP if the callback was not triggered by an \fBXEvent\fR\&.
.PP
The \fIitem_or_text\fP argument is the contents
of the Text widget at the time the event caused the callback to be invoked\&.
This data is only valid within the scope of the \fIcall_data\fP
structure, so the application must copy it when it is used outside
of this scope\&.
.PP
The \fIitem_position\fP argument is the new
value of the \fBDtNselectedPosition\fP
resource in the DtComboBox\&'s List\&. If this is zero, it means the user entered
a value in the XmTextField widget\&.
.SH "SEE ALSO"
.PP
\fBDtComboBoxAddItem\fP(3), \fBDtComboBoxDeletePos\fP(3), \fBDtComboBoxSelectItem\fP(3), \fBDtComboBoxSetItem\fP(3), \fBDtCreateComboBox\fP(3), \fBComposite\fP(3), \fBConstraint\fP(3), \fBCore\fP(3), \fBXmList\fP(3), \fBXmManager\fP(3), \fBXmText\fP(3), \fBXmTextField\fP(3), \fBXtGetValues\fP(3), \fBXtSetValues\fP(3)\&. 
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:40
