'\" t
...\" TabLstIn.sgm /main/8 1996/09/08 21:09:20 rws $
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "XmTabListInsertTabs" "library call"
.SH "NAME"
\fBXmTabListInsertTabs\fP \(em A convenience function that inserts tabs into a tab list
.iX "XmTabListInsertTabs"
.SH "SYNOPSIS"
.PP
.nf
#include <Xm/Xm\&.h>
\fBXmTabList \fBXmTabListInsertTabs\fP\fR(
\fBXmTabList \fBoldlist\fR\fR,
\fBXmTab \fB*tabs\fR\fR,
\fBCardinal \fBtab_count\fR\fR,
\fBint \fBposition\fR\fR);
.fi
.SH "DESCRIPTION"
.PP
\fBXmTabListInsertTabs\fP creates a new tab list that includes the
tabs in \fIoldlist\fP\&. This function copies specified tabs to the
tab list at the given position\&. The first \fItab_count\fP tabs of the
\fItabs\fP array are added to the tab list\&. If \fIoldlist\fP is NULL,
\fBXmTabListInsertTabs\fP creates a new tab list containing only the
tabs specified\&.
.IP "\fIoldlist\fP" 10
Specifies the tab list to add the tabs to\&.
The function deallocates \fIoldlist\fP after extracting the required information\&.
.IP "\fItabs\fP" 10
Specifies a pointer to the tabs to be added to the tab list\&.
It is the caller\&'s responsibility to free the
tabs in \fItabs\fP by using \fBXmTabFree\fP\&.
.IP "\fItab_count\fP" 10
Specifies the number of tabs in \fItabs\fP\&.
.IP "\fIposition\fP" 10
Specifies the position of the first new tab in the tab list\&. A value
of 0 (zero) makes the first new tab the first tab in the tab list, a
value of 1 makes it the second tab, and so on\&. If \fIposition\fP is
greater than the number of tabs in \fIoldlist\fP, then the tabs will
be inserted at the end\&. If \fIposition\fP is negative, the count will
be backwards from the end\&. A value of -1 makes the first new tab
the last tab, and so on\&.
.SH "RETURN"
.PP
If \fItabs\fP is NULL or \fItab_count\fP is 0 (zero), this function returns
\fIoldlist\fP\&. Otherwise, it returns a new tab list\&.
The function allocates space to hold the returned tab list\&.
The application is responsible for managing the allocated space\&.
The application can recover the allocated space by calling \fBXmTabListFree\fP\&.
.SH "RELATED"
.PP
\fBXmTabList\fP(3) and
\fBXmTabListFree\fP(3)\&.
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:42
