'\" t
...\" Set_Icon.sgm /main/6 1996/09/08 20:15:43 rws $
...\" Set_Icon.sgm /main/6 1996/09/08 20:15:43 rws $-->
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "Set_Iconified" "special file"
.SH "NAME"
\fBSet_Iconified\fP \(em set a tool\&'s iconic state
.SH "SYNOPSIS"
.PP
.nf
Set_Iconified(in boolean \fIiconic\fP
        [in messageID \fIcommission\fP]);
.fi
.SH "DESCRIPTION"
.PP
The
\fBSet_Iconified\fP request
sets the iconic state of the optionally specified
window, or of the window primarily associated with the handling
procid (if no window is specified)\&.
.PP
The
\fIiconic\fP argument
is a Boolean value indicating whether the specified window is (to be)
iconified\&.
.PP
The
\fIcommission\fP argument
is the ID of the ongoing request, if any, that resulted in the creation
of the window(s) in question\&.
.SH "APPLICATION USAGE"
.PP
The
\fBttdt_session_join\fP(3), and
\fBttdt_message_accept\fP(3), functions can be used by Xt applications to register for,
and transparently process, the
\fBSet_Iconified\fP request\&.
.PP
If the handler does not map window-system windows one-to-one to
commissions or procids, then it may interpret ``iconic state\&'\&' liberally\&.
For example, consider a
\fBDisplay\fP request on an
\fBISO_Latin_1\fP file, handled by a
\fBgnuemacs\fP instance that then devotes an
\fBemacs\fP ``window\&'\&' to the file\&.
``Windows\&'\&' in
\fBgnuemacs\fP are not separate X11 windows, and are not separately iconifiable\&.
However, a
\fBSet_Iconified\fP request issued with respect to the ongoing
\fBDisplay\fP request could be liberally interpreted by
\fBgnuemacs\fP to mean it should
minimize the screen real estate devoted to the operation, perhaps by
``burying\&'\&' the buffer or dividing its window\&'s real estate among
neighboring windows\&.
And, if the
\fBDisplay\fP request happens to be the only thing
\fBemacs\fP is working on at the
moment, it could instead take a literal interpretation, and actually
iconify itself\&.
.SH "EXAMPLES"
.PP
The
\fBSet_Iconified\fP request can be sent as in the following example:
.PP
.nf
\f(CWTt_message msg = tttk_message_create(0, TT_REQUEST, TT_SESSION,
                        the_recipient_procid, TTDT_SET_ICONIFIED,
                        my_callback);
tt_message_iarg_add(msg, TT_IN, Tttk_boolean, 1);
tt_message_send(msg);\fR
.fi
.PP
.SH "WARNINGS"
.PP
\fBSet_Iconified\fP can also be sent as a multicast notice, as an
\fIedict\fP to all tools in the scope of the message\&.
The consequences of doing so can be severe and unexpected\&.
.SH "SEE ALSO"
.PP
\fBtt_message_iarg_add\fP(3), \fBtt_message_send\fP(3), \fBttdt_message_accept\fP(3), \fBttdt_session_join\fP(3); \fBGet_Iconified\fP request\&.
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:41
