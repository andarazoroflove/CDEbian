'\" t
...\" Get_Stat.sgm /main/6 1996/09/08 20:14:13 rws $
...\" Get_Stat.sgm /main/6 1996/09/08 20:14:13 rws $-->
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "Get_Status" "special file"
.SH "NAME"
\fBGet_Status\fP \(em retrieve a tool\&'s current status
.SH "SYNOPSIS"
.PP
.nf
Get_Status(out string \fIstatus\fP,
        out string \fIvendor\fP,
        out string \fItoolName\fP,
        out string \fItoolVersion\fP
        [in messageID \fIoperation2Query\fP]);
.fi
.SH "DESCRIPTION"
.PP
The
\fBGet_Status\fP request
retrieves the current status of a tool (or,
optionally, of a specific operation being performed by a tool)\&.
.PP
The
\fIstatus\fP argument
is the status retrieved\&.
.PP
The
\fIvendor\fP argument
is the name of the vendor of the handling tool\&.
.PP
The
\fItoolName\fP argument
is the name of the handling tool\&.
.PP
The
\fItoolVersion\fP argument
is the version of the handling tool\&.
.SH "OPTIONAL"
.PP
The
\fIoperation2Query\fP argument
is the ID of the request that initiated the operation the
status of which is being requested\&.
.SH "APPLICATION USAGE"
.PP
The
\fBttdt_session_join\fP(3), and
\fBttdt_message_accept\fP(3), functions can be used to register for, and
help process, the
\fBGet_Status\fP request\&.
.SH "EXAMPLES"
.PP
After sending a
\fBTT_REQUEST\fP and storing its handle in
\fBTt_message\fR \fIrequest_I_sent\fP, if the handler identifies itself with a
\fBStatus\fP notice
saved in
\fBTt_message\fR \fIstatus_msg_from_handler\fP, then the status of
\fIrequest_I_sent\fP can be queried as in the following example:
.PP
.nf
\f(CWTt_message msg = tttk_message_create(0, TT_REQUEST, TT_SESSION,
                tt_message_sender(status_msg_from_handler),
                TTDT_GET_STATUS, my_callback);
tt_message_arg_add(msg, TT_OUT, Tttk_string, 0);
tt_message_arg_add(msg, TT_OUT, Tttk_string, 0);
tt_message_arg_add(msg, TT_OUT, Tttk_string, 0);
tt_message_arg_add(msg, TT_OUT, Tttk_string, 0);
tt_message_arg_add(msg, TT_IN, Tttk_string,
                        tt_message_id(request_I_sent));
tt_message_send(msg);\fR
.fi
.PP
.SH "SEE ALSO"
.PP
\fBtt_message_arg_add\fP(3), \fBtt_message_id\fP(3), \fBtt_message_send\fP(3), \fBttdt_message_accept\fP(3), \fBtt_message_sender\fP(3), \fBttdt_session_join\fP(3)\&.
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:41
