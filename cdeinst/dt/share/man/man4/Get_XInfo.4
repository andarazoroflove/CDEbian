'\" t
...\" Get_XInf.sgm /main/7 1996/09/08 20:14:29 rws $
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "Get_XInfo" "special file"
.SH "NAME"
\fBGet_XInfo\fP \(em get a tool\&'s X11 attributes
.SH "SYNOPSIS"
.PP
.nf
Get_XInfo(out string \fIdisplay\fP,
        out string \fIvisual\fP,
        out integer \fIdepth\fP
        [in messageID \fIcommission\fP]);
.fi
.SH "DESCRIPTION"
.PP
The \fBGet_XInfo\fP request reports the X11
attributes of the optionally specified window, or of the window primarily
associated with the recipient procid (if no window is specified)\&.
.PP
The \fIdisplay\fP argument is an X11 display\&.
.PP
The \fIvisual\fP argument is an X11 visual class (which
determines how a pixel will be displayed as a color)\&. Valid values are:
.TS
tab();
lw(1.543860i) lw(1.724781i) lw(2.231360i).
\f(CWDirectColor\fP\f(CWPseudoColor\fP\f(CWStaticGray\fP
\f(CWGrayScale\fP\f(CWStaticColor\fP\f(CWTrueColor\fP
.TE
.PP
The \fIdepth\fP argument is the number of
bits in a pixel\&.
.PP
The \fIcommission\fP argument is the ID of the ongoing
request with respect to which X11 attributes are being set or reported\&.
.SH "APPLICATION USAGE"
.PP
The \fBttdt_session_join\fP(3), and \fBttdt_message_accept\fP(3), functions can be used by Xt applications to register for, and
transparently process, the \fBGet_XInfo\fP request\&.
Also, \fBGet_XInfo\fP can be sent by \fBttdt_sender_imprint_on\fP(3)\&.
.PP
Since the handler may be running on a different host, it is almost always
better to return a \fIdisplay\fP value of \fIhostname\fP:\fIn\fP[\&. \fIn\fP] instead of :\fIn\fP[\&. \fIn\fP]\&.)
.PP
The \fIcommission\fP argument is useful to the extent
that the handler employs different attributes for the different operations
it may be carrying out\&.
.SH "EXAMPLES"
.PP
The \fBGet_XInfo\fP request can be sent as
in the following example:
.PP
.nf
\f(CWTt_message msg = tttk_message_create(0, TT_REQUEST, TT_SESSION,
                        the_recipient_procid, TTDT_GET_XINFO,
                        my_callback);
tt_message_arg_add(msg, TT_OUT, Tttk_string, 0);
tt_message_arg_add(msg, TT_OUT, Tttk_string, 0);
tt_message_iarg_add(msg, TT_OUT, Tttk_integer, 0);
tt_message_send(msg);\fR
.fi
.PP
.SH "SEE ALSO"
.PP
\fBtt_message_iarg_add\fP(3), \fBtt_message_send\fP(3), \fBttdt_message_accept\fP(3), \fBttdt_sender_imprint_on\fP(3), \fBttdt_session_join\fP(3)\&.
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:41
