'\" t
...\" Set_Env.sgm /main/6 1996/09/08 20:15:27 rws $
...\" Set_Env.sgm /main/6 1996/09/08 20:15:27 rws $-->
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "Set_Environment" "special file"
.SH "NAME"
\fBSet_Environment\fP \(em set a tool\&'s environment
.SH "SYNOPSIS"
.PP
.nf
Set_Environment(in string \fIvariable\fP,
        in string \fIvalue\fP
        [\&.\&.\&.]);
.fi
.SH "DESCRIPTION"
.PP
The
\fBSet_Environment\fP request
replaces the value of the indicated environment variable(s)\&.
.PP
The
\fIvariable\fP argument
is the name of the environment variable to set\&.
.PP
The
\fIvalue\fP argument
is the value of the environment variable\&.
If this argument is unset (in other words, has a
value of
\fB(char *)0\fP), then the
variable should be removed from the environment\&.
It is not
an error for the variable not to have existed in the first place\&.
.SH "APPLICATION USAGE"
.PP
The
\fBttdt_session_join\fP(3), function can be used to register for,
and transparently process, the
\fBSet_Environment\fP request\&.
.SH "EXAMPLES"
.PP
The
\fBSet_Environment\fP request can be sent as in the following example:
.PP
.nf
\f(CWTt_message msg = tttk_message_create(0, TT_REQUEST, TT_SESSION,
                        the_recipient_procid, TTDT_SET_ENVIRONMENT,
                        my_callback);
tt_message_arg_add(msg, TT_IN, Tttk_string, "PATH");
tt_message_arg_add(msg, TT_IN, Tttk_string, "/bin:/usr/ucb");
tt_message_send(msg);\fR
.fi
.PP
.SH "WARNINGS"
.PP
\fBSet_Environment\fP can also be sent as a multicast notice, as an
\fIedict\fP to all tools in the scope of the message\&.
The consequences of doing so can be severe and unexpected\&.
.SH "SEE ALSO"
.PP
\fBtt_message_arg_add\fP(3), \fBtt_message_send\fP(3), \fBttdt_session_join\fP(3); \fBGet_Environment\fP request\&.
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:41
