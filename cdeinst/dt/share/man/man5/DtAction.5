'\" t
...\" DtAction.sgm /main/7 1996/09/08 19:58:29 rws $
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "Dt/Action\&.h" "file formats"
.SH "NAME"
\fBDt/Action\&.h\fP \(em action service definitions
.SH "SYNOPSIS"
.PP
.nf
#include <Dt/Action\&.h>
.fi
.SH "DESCRIPTION"
.PP
The
\fBDt/Action\&.h\fP header defines the following
\fBDtActionStatus\fP constants:
.PP
.nf
\f(CWDtACTION_OK
DtACTION_INVALID_ID
DtACTION_INVOKED
DtACTION_DONE
DtACTION_CANCELED
DtACTION_FAILED
DtACTION_STATUS_UPDATE\fR
.fi
.PP
.PP
The header defines the following data type through
\fBtypedef\fP:
.PP
.nf
\f(CWtypedef unsigned long DtActionInvocationID;\fR
.fi
.PP
.PP
The header defines the following callback prototypes:
.PP
.nf
typedef void (*DtActionCallbackProc)(DtActionInvocationID \fIid\fP,
        XtPointer \fIclient_data\fP,
        DtActionArg *\fIargs\fP,
        int \fIargCount\fP,
        DtActionStatus \fIstatus\fP);
.fi
.PP
.nf
typedef void (*DtDbReloadCallbackProc)(XtPointer \fIclientData\fP);
.fi
.PP
The header defines the following as functions:
.PP
.nf
void DtDbReloadNotify(DtDbReloadCallbackProc \fIproc\fP,
        XtPointer \fIclientData\fP);
.fi
.PP
.nf
void DtDbLoad(void);
.fi
.PP
.nf
Boolean DtActionExists(char *\fIs\fP);
.fi
.PP
.nf
char *DtActionLabel(char *\fIs\fP);
.fi
.PP
.nf
char *DtActionDescription(char *\fIactionName\fP);
.fi
.PP
.nf
char *DtActionIcon(char *\fIactionName\fP);
.fi
.PP
.nf
DtActionInvocationID
DtActionInvoke(Widget \fIw\fP,
        char *\fIaction\fP,
        DtActionFile *\fIargs\fP,
        int \fIargCount\fP,
        char *\fItermOpts\fP,
        char *\fIexecHost\fP,
        char *\fIcontextDir\fP,
        int \fIuseIndicator\fP,
        DtActionCallbackProc \fIstatusUpdateCb\fP,
        XtPointer \fIclient_data\fP);
.fi
.SH "SEE ALSO"
.PP
\fBDtActionDescription\fP(3), \fBDtActionExists\fP(3), \fBDtActionIcon\fP(3), \fBDtActionInvoke\fP(3), \fBDtActionLabel\fP(3), \fBDtActionCallbackProc\fP(3), \fBDtDbLoad\fP(3), \fBDtDbReloadNotify\fP(3), \fBdtaction\fP(1)\&.
...\" created by instant / docbook-to-man, Sun 02 Sep 2012, 09:41
