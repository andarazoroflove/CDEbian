! (c) Copyright 1989, 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC. 
! ALL RIGHTS RESERVED 
! 
! Motif Release 1.2.2


module cutpaste
    version = 'v1.2'
    names = case_sensitive
    character_set=iso_latin1
    objects = {
        XmLabel = widget;
        XmPushButton = widget;
        XmToggleButton = widget;
        XmCascadeButton = widget;
        XmSeparator = widget;
    }

include file ("cutpaste_local.uil");

procedure
        InitPopupCb(string);
        ManageCb(string);
	CutCb();
	CopyCb();
	PasteCb();
        ExitCb();

list scrollArgs : arguments {
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
	XmNshowArrows = false;
	XmNsliderSize = 5;
	XmNtraversalOn = true;
	XmNhighlightThickness = 1;
	XmNprocessingDirection = XmMAX_ON_TOP;
};


!
! Main window
!
object appMain : XmMainWindow {
    arguments {
        XmNmenuBar = XmMenuBar menuBar;
    };
    controls {
        XmMenuBar menuBar;
	XmFrame workArea;
	unmanaged XmInformationDialog helpDialog;
    };
};




!
! Menu bar and pulldown menus
!

object menuBar : XmMenuBar {
    arguments {
        XmNmenuHelpWidget = XmCascadeButton helpCascade;
    };
    controls {
        XmCascadeButton fileCascade;
        XmCascadeButton editCascade;
        XmCascadeButton helpCascade;
    };
};

object fileCascade : XmCascadeButton {
    arguments {
        XmNlabelString = fileCascadeText;
        XmNmnemonic = keysym(fileCascadeMnem);
    };
    controls { XmPulldownMenu {
!	arguments { XmNtearOffModel = XmTEAR_OFF_ENABLED; };
        controls {
            XmPushButton exitButton;
        }; };
    };
};

object exitButton : XmPushButton {
    arguments {
        XmNlabelString = exitButtonText;
        XmNmnemonic = keysym(exitButtonMnem);
    };
    callbacks { XmNactivateCallback = procedure ExitCb(); };
};
object editCascade : XmCascadeButton {
    arguments {
        XmNlabelString = editCascadeText;
        XmNmnemonic = keysym(editCascadeMnem);
    };
    controls { XmPulldownMenu {
	arguments { XmNtearOffModel = XmTEAR_OFF_ENABLED; };
	controls {
	    XmPushButton cutButton;
	    XmPushButton copyButton;
	    XmPushButton pasteButton;
        }; };
    };
};

object helpCascade : XmCascadeButton {
    arguments {
        XmNlabelString = helpCascadeText;
        XmNmnemonic = keysym(helpCascadeMnem);
    };
    controls { XmPulldownMenu {
        arguments { XmNtearOffModel = XmTEAR_OFF_ENABLED; };
        controls {
            XmPushButton helpButton;
        }; };
    };
};
object helpButton : XmPushButton {
    arguments {
        XmNlabelString = helpButtonText;
        XmNmnemonic = keysym(helpButtonMnem);
    };
    callbacks { XmNactivateCallback = procedure ManageCb("*helpDialog"); };
};




!
! Popup menu
!

object popupMenu : XmPopupMenu {
    arguments { XmNtearOffModel = XmTEAR_OFF_ENABLED; };
    controls {
	XmLabel { arguments { XmNlabelString = popupTitleText; }; };
	XmSeparator { arguments { XmNseparatorType = XmDOUBLE_LINE; }; };
	XmPushButton cutButton;
	XmPushButton copyButton;
	XmPushButton pasteButton;
    };
    callbacks {
	MrmNcreateCallback = procedure InitPopupCb("*displayArea");
    };
};

object cutButton : XmPushButton {
    arguments {
	XmNlabelString = menuCutText;
	XmNmnemonic = keysym(menuCutMnem);
    };
    callbacks { XmNactivateCallback = procedure CutCb(); };
};
object copyButton : XmPushButton {
    arguments {
	XmNlabelString = menuCopyText;
	XmNmnemonic = keysym(menuCopyMnem);
    };
    callbacks { XmNactivateCallback = procedure CopyCb(); };
};
object pasteButton : XmPushButton {
    arguments {
	XmNlabelString = menuPasteText;
	XmNmnemonic = keysym(menuPasteMnem);
    };
    callbacks { XmNactivateCallback = procedure PasteCb(); };
};


!
! Work area
!

object workArea : XmFrame {
    arguments {
	XmNmarginWidth = 20;
	XmNmarginHeight = 20;
    };
    controls { XmFrame displayArea; };
};

object displayArea : XmFrame {
    arguments {
	XmNmarginWidth = 10;
	XmNmarginHeight = 10;
	XmNshadowType = XmSHADOW_OUT;
	XmNshadowThickness = 1;
    };
    controls {
	XmLabel graphLabel;
	XmForm graphForm;
	unmanaged XmPopupMenu popupMenu;
    };
};

object graphLabel : XmLabel {
    arguments {
	XmNchildType = XmFRAME_TITLE_CHILD;
	XmNchildHorizontalAlignment = XmALIGNMENT_END;
	XmNlabelString = graphLabelText;
    };
};

object graphForm : XmForm {
    arguments {
	XmNfractionBase = 15;
    };
    controls {
	XmScrollBar { arguments {
	    arguments scrollArgs;
	    XmNleftPosition = 0; XmNrightPosition = 1;
	}; };
	XmScrollBar { arguments {
	    arguments scrollArgs;
	    XmNleftPosition = 1; XmNrightPosition = 2;
	}; };
	XmScrollBar { arguments {
	    arguments scrollArgs;
	    XmNleftPosition = 2; XmNrightPosition = 3;
	}; };
	XmScrollBar { arguments {
	    arguments scrollArgs;
	    XmNleftPosition = 3; XmNrightPosition = 4;
	}; };
	XmScrollBar { arguments {
	    arguments scrollArgs;
	    XmNleftPosition = 4; XmNrightPosition = 5;
	}; };
	XmScrollBar { arguments {
	    arguments scrollArgs;
	    XmNleftPosition = 5; XmNrightPosition = 6;
	}; };
	XmScrollBar { arguments {
	    arguments scrollArgs;
	    XmNleftPosition = 6; XmNrightPosition = 7;
	}; };
	XmScrollBar { arguments {
	    arguments scrollArgs;
	    XmNleftPosition = 7; XmNrightPosition = 8;
	}; };
	XmScrollBar { arguments {
	    arguments scrollArgs;
	    XmNleftPosition = 8; XmNrightPosition = 9;
	}; };
	XmScrollBar { arguments {
	    arguments scrollArgs;
	    XmNleftPosition = 9; XmNrightPosition = 10;
	}; };
	XmScrollBar { arguments {
	    arguments scrollArgs;
	    XmNleftPosition = 10; XmNrightPosition = 11;
	}; };
	XmScrollBar { arguments {
	    arguments scrollArgs;
	    XmNleftPosition = 11; XmNrightPosition = 12;
	}; };
	XmScrollBar { arguments {
	    arguments scrollArgs;
	    XmNleftPosition = 12; XmNrightPosition = 13;
	}; };
	XmScrollBar { arguments {
	    arguments scrollArgs;
	    XmNleftPosition = 13; XmNrightPosition = 14;
	}; };
	XmScrollBar { arguments {
	    arguments scrollArgs;
	    XmNleftPosition = 14; XmNrightPosition = 15;
	}; };
    };
};

!
! Help dialog
!

object helpDialog : XmInformationDialog {
    arguments {
	XmNdialogTitle = helpTitleText;
	XmNcancelLabelString = helpCancelText;
	XmNmessageString = helpMessageText;
    };
    controls {
	Xm_OK unmanaged { };
	Xm_Help unmanaged { };
    };
};



end module;
