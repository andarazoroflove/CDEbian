# $XConsortium: dtfile.config.cpp /main/4 1996/10/08 11:57:49 mustafa $
# #########################################################################
#  -----------------------------------------------------------------------
#  dtfile.config
#  -------------
#
# (c) Copyright 1996 Digital Equipment Corporation.
# (c) Copyright 1993,1994,1996 Hewlett-Packard Company.
# (c) Copyright 1993,1994,1996 International Business Machines Corp.
# (c) Copyright 1993,1994,1996 Sun Microsystems, Inc.
# (c) Copyright 1996 Novell, Inc. 
# (c) Copyright 1996 FUJITSU LIMITED.
# (c) Copyright 1996 Hitachi.
# (c) Copyright 1993, 1994 Unix System Labs, Inc., a subsidiary of
#     Novell, Inc.
#
#  Configuration file for the dt File Manager.
#
#  This file enables dialogs which can be used to edit
#  file-system specific parameters, for example Access
#  Control Lists for Andrew File System directories.
#  Additional information is in the man page dtfile_config.
#
#  The file consists of two sections.  The first section
#  maps platform-specific information to a platform-independent
#  identifier. There are two fields in the platform-specific
#  portion separated by a colon.  The first field identifies
#  the platform: aix, hpux, sunos.  The second field depends
#  on platform; for aix it is an integer corresponding to the
#  st_vfstype field returned by stat, for hpux it is an integer
#  corresponding to the f_fsid[1] field returned by statfs, for
#  sunos it is a string corresponding to the f_basetype field
#  returned by statvfs.  The platform-independent identifier
#  is given following an equals sign.  The keyword "end" delimits
#  the list of mappings.  For example, to define the "native"
#  file systems on several platforms:
#
#  aix:3       = native
#  hpux:0      = native
#  sunos:ufs   = native
#  decunix:ufs = native
#  end
#
#  The second section of the configuration file provides
#  information needed by File Manager to execute the
#  filesystem-specific dialog. It consists of a list of
#  platform-independent identifiers followed by a colon and
#  two or three fields. Each field consists of a name followed
#  by an equals sign and a string. The three field names are:
#  buttonLabel, which defines a label for a button in the permissions
#  dialog; fsDialog, which defines the path to the program
#  which displays the dialog for editing file-specific properties;
#  and warning, which is optional and defines a warning message to
#  be displayed in permissions dialog. "\n" can be included in the
#  warning text to generate a new line. Continuing the native file
#  system example used above, the following would enable a file-system
#  specific dialog generated by the program /local/bin/modExtAttr:
#
#  native:     buttonLabel  =  Modify extended attributes ...
#              warning      =  Warning:\nExtended attributes may limit your access
#              fsDialog     =  /local/bin/modExtAttr
#
#   Since the button label and warning are visible to users, they must be
#   localized. This is done using the tagged message file
#   format.
#
#  -----------------------------------------------------------------------
#

# aix:3       = test
# hpux:0      = test
# sunos:ufs   = test
# decunix:ufs = test
end

afs:    buttonLabel = Cambiar ACL de AFS ...
        warning     = Aviso: Este es un objeto Andrew File System (AFS).\nLos permisos de acceso pueden ser restringidos más adelante por la Lista de Control de Accesos de AFS (ACL).
        fsDialog    = /usr/dt/bin/dtaclafs

test:   buttonLabel = Mostrar diálogo prueba ...
        fsDialog    = /usr/dt/bin/dtfile_error
